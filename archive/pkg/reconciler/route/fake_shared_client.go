// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: knative.dev/pkg/client/clientset/versioned (interfaces: Interface)

// Package route is a generated GoMock package.
package route

import (
	gomock "github.com/golang/mock/gomock"
	discovery "k8s.io/client-go/discovery"
	v1alpha1 "knative.dev/pkg/client/clientset/versioned/typed/authentication/v1alpha1"
	v1alpha3 "knative.dev/pkg/client/clientset/versioned/typed/istio/v1alpha3"
	reflect "reflect"
)

// FakeSharedClient is a mock of Interface interface
type FakeSharedClient struct {
	ctrl     *gomock.Controller
	recorder *FakeSharedClientMockRecorder
}

// FakeSharedClientMockRecorder is the mock recorder for FakeSharedClient
type FakeSharedClientMockRecorder struct {
	mock *FakeSharedClient
}

// NewFakeSharedClient creates a new mock instance
func NewFakeSharedClient(ctrl *gomock.Controller) *FakeSharedClient {
	mock := &FakeSharedClient{ctrl: ctrl}
	mock.recorder = &FakeSharedClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *FakeSharedClient) EXPECT() *FakeSharedClientMockRecorder {
	return m.recorder
}

// Authentication mocks base method
func (m *FakeSharedClient) Authentication() v1alpha1.AuthenticationV1alpha1Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authentication")
	ret0, _ := ret[0].(v1alpha1.AuthenticationV1alpha1Interface)
	return ret0
}

// Authentication indicates an expected call of Authentication
func (mr *FakeSharedClientMockRecorder) Authentication() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authentication", reflect.TypeOf((*FakeSharedClient)(nil).Authentication))
}

// AuthenticationV1alpha1 mocks base method
func (m *FakeSharedClient) AuthenticationV1alpha1() v1alpha1.AuthenticationV1alpha1Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthenticationV1alpha1")
	ret0, _ := ret[0].(v1alpha1.AuthenticationV1alpha1Interface)
	return ret0
}

// AuthenticationV1alpha1 indicates an expected call of AuthenticationV1alpha1
func (mr *FakeSharedClientMockRecorder) AuthenticationV1alpha1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthenticationV1alpha1", reflect.TypeOf((*FakeSharedClient)(nil).AuthenticationV1alpha1))
}

// Discovery mocks base method
func (m *FakeSharedClient) Discovery() discovery.DiscoveryInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Discovery")
	ret0, _ := ret[0].(discovery.DiscoveryInterface)
	return ret0
}

// Discovery indicates an expected call of Discovery
func (mr *FakeSharedClientMockRecorder) Discovery() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Discovery", reflect.TypeOf((*FakeSharedClient)(nil).Discovery))
}

// Networking mocks base method
func (m *FakeSharedClient) Networking() v1alpha3.NetworkingV1alpha3Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Networking")
	ret0, _ := ret[0].(v1alpha3.NetworkingV1alpha3Interface)
	return ret0
}

// Networking indicates an expected call of Networking
func (mr *FakeSharedClientMockRecorder) Networking() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Networking", reflect.TypeOf((*FakeSharedClient)(nil).Networking))
}

// NetworkingV1alpha3 mocks base method
func (m *FakeSharedClient) NetworkingV1alpha3() v1alpha3.NetworkingV1alpha3Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NetworkingV1alpha3")
	ret0, _ := ret[0].(v1alpha3.NetworkingV1alpha3Interface)
	return ret0
}

// NetworkingV1alpha3 indicates an expected call of NetworkingV1alpha3
func (mr *FakeSharedClientMockRecorder) NetworkingV1alpha3() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NetworkingV1alpha3", reflect.TypeOf((*FakeSharedClient)(nil).NetworkingV1alpha3))
}
