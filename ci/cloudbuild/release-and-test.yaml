# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
# # Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the entrypoint for Kf's CI/CD pipeline, the workflow triggers
# a build and then executes tests on the produced artifacts.
#
# This can be ran by doing the following:
# gcloud builds submit . \
# --config=ci/cloudbuild/main.yaml \
# --ignore-file=ci/cloudbuild/test.ignore \

timeout: 10800s
options:
  machineType: "N1_HIGHCPU_8"

substitutions:
  _CLOUDSDK_IMAGE: "gcr.io/google.com/cloudsdktool/cloud-sdk:417.0.1-alpine"
  _RELEASE_BUCKET: ""
  _EXPORT_BUCKET: ""
  _EXPORT_JOB_NAME: ""
  _TAGGED_RELEASE_INDEX: "0" # 0=head, 1=current release, 2=previous release

steps:
  - id: select revision for test
    name: "${_CLOUDSDK_IMAGE}"
    script: |
      set -eux

      if [ "$_TAGGED_RELEASE_INDEX" -gt 0 ]; then
        # Preserve the hack and ci configurations
        temp_dir=$(mktemp -d)
        cp -r ci $temp_dir/ci
        cp -r hack $temp_dir/hack

        git fetch --tags --unshallow

        until [ "$_TAGGED_RELEASE_INDEX" -eq 0 ]; do
          # Jump back one revision based on tagged releases
          git checkout $(git describe --tags HEAD~1 --abbrev=0)
          _TAGGED_RELEASE_INDEX=$((_TAGGED_RELEASE_INDEX - 1))
        done

        cp -r $temp_dir/* ./
        git status --porcelain

        echo "Running tests against release: $(git describe --tags --abbrev=0)"
      fi

      echo "Using git revision $(git rev-parse HEAD)"
    env:
      - "_TAGGED_RELEASE_INDEX=$_TAGGED_RELEASE_INDEX"

  - id: submit build and then test jobs
    entrypoint: bash
    name: "${_CLOUDSDK_IMAGE}"
    args: ["./hack/prow/e2e-test.sh"]
    env:
      - "GCP_PROJECT_ID=$PROJECT_ID"
      - "BUILD_ID=$BUILD_ID"
      - "RELEASE_BUCKET=$_RELEASE_BUCKET"
      - "EXPORT_BUCKET=$_EXPORT_BUCKET"
      - "EXPORT_JOB_NAME=$_EXPORT_JOB_NAME"
