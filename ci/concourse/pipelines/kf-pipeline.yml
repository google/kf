# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
# Store these in your credential manager.
vars:
- &github_repo ((github_repo))
- &git_uri ((git_uri))
- &git_branch ((git_branch))
- &github_access_token ((github_access_token))
- &github_webhook_token ((github_webhook_token))
- &service_account_json ((service_account_json))
- &ci_image_uri ((ci_image_uri))
- &pr_comment ((pr_comment))
- &fly_user ((fly_user))
- &fly_password ((fly_password))
- &fly_target ((fly_target))
- &fly_url ((fly_url))
- &fly_team ((fly_team))

# Each task which runs go commands inherits these environment variables.
- &go_task_params
  GOPROXY: https://proxy.golang.org
  GOSUMDB: sum.golang.org
  SERVICE_ACCOUNT_JSON: *service_account_json

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

resources:
- name: src
  type: pull-request
  check_every: 1m
  webhook_token: *github_webhook_token
  source:
    repository: *github_repo
    access_token: *github_access_token
- name: ci-pipelines-src
  type: git
  source:
    branch: *git_branch
    uri: *git_uri
    paths:
    - ci/concourse/pipelines
- name: ci-image-src
  type: git
  source:
    branch: *git_branch
    uri: *git_uri
    paths:
    - ci/concourse/image
- name: ci-image
  type: docker-image
  source: &ci-image-source
    repository: *ci_image_uri
    username: _json_key
    password: *service_account_json

jobs:
- name: ci-image
  plan:
  - get: ci-image-src
    trigger: true
  - put: ci-image
    params:
      build: ci-image-src/ci/concourse/image
- name: pr-start
  plan:
  - get: src
    version: every
    trigger: true
  - put: src
    params:
      path: src
      status: pending
      comment: *pr_comment
  - get: ci-pipelines-src
  - task: fly-set-pipeline
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: *ci-image-source
      inputs:
      - name: ci-pipelines-src
      - name: src
      params:
        FLY_TARGET: *fly_target
        FLY_USER: *fly_user
        FLY_PASSWORD: *fly_password
        FLY_URL: *fly_url
        FLY_TEAM: *fly_team
      run:
        dir: ci-pipelines-src
        path: sh
        args:
        - -exc
        - |
          wget "${FLY_URL}/api/v1/cli?arch=amd64&platform=linux" -O fly
          chmod +x ./fly
          set +x
          echo fly login...
          ./fly login\
            -t "$FLY_TARGET" \
            -c "$FLY_URL" \
            -n "$FLY_TEAM" \
            -u "$FLY_USER" \
            -p "$FLY_PASSWORD"
          set -x
          metadata=../src/.git/resource/metadata.json
          jq_for() {
            jq -r ".[] | select(.name == \"$1\") | .value"
          }
          pr_number=$(cat "$metadata" | jq_for pr)
          git_branch=$(cat "$metadata" | jq_for head_name)
          ./fly -t "$FLY_TARGET" set-pipeline \
            -n \
            -p "$pr_number" \
            -c ci/concourse/pipelines/pr-pipeline.yml \
            -v git_branch="$git_branch" \
            -v pr_number="$pr_number"
    on_failure:
      put: src
      params:
        path: src
        status: failure
