---
# Store these in your credential manager.
vars:
- &github_repo ((github_repo))
- &git_uri ((git_uri))
- &git_branch {{git_branch}}
- &github_access_token ((github_access_token))
- &pr_number {{pr_number}}
- &service_account_json ((service_account_json))
- &ci_image_uri ((ci_image_uri))
- &github_status_sha

# Each task which runs go commands inherits these environment variables.
- &go_task_params
  GOPROXY: https://proxy.golang.org
  GOSUMDB: sum.golang.org
  SERVICE_ACCOUNT_JSON: *service_account_json

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: teliaoss/github-pr-resource

resources:
- name: src
  type: git
  source:
    branch: *git_branch
    uri: *git_uri
- name: ci-src
  type: git
  source:
    branch: *git_branch
    uri: *git_uri
    path: ci/concourse
- name: ci-image
  type: docker-image
  source: &ci-image-source
    repository: *ci_image_uri
    username: _json_key
    password: *service_account_json

jobs:
- name: check
  plan:
  - get: src
    trigger: true
  - get: ci-image
  - get: ci-src
  - task: check
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: *ci-image-source
      inputs:
      - name: src
      params: *go_task_params
      run:
        dir: src
        path: sh
        args:
        - -exc
        - |
          hack/check-linters.sh
          hack/check-go-generate.sh
    on_failure: *on_failure
- name: build
  plan:
  - get: src
    trigger: true
  - get: ci-image
  - get: ci-src
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: *ci-image-source
      inputs:
      - name: src
      outputs:
      - name: bin
      params: *go_task_params
      run:
        dir: src
        path: sh
        args:
        - -exc
        - |
          hack/build.sh
          mv kf ../bin
    on_failure: *on_failure
- name: test
  plan:
  - get: src
    trigger: true
  - get: ci-image
  - get: ci-src
  - task: test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: *ci-image-source
      inputs:
      - name: src
      - name: ci-src
      params: *go_task_params
      run:
        dir: src
        path: sh
        args:
        - -exc
        - |
          set +x
          /bin/echo "$SERVICE_ACCOUNT_JSON" > key.json
          set -x
          gcloud auth activate-service-account --key-file key.json
          gcloud config set project kf-source
          gcloud container clusters get-credentials kf-2 --zone us-central1-c --project kf-source
          /bin/echo 'y' | gcloud auth configure-docker
          NO_RACE=true hack/test.sh
    on_failure: *on_failure
- name: success
  plan:
  - get: ci-src
  - get: src
    trigger: true
    passed: [check, build, test]
  - task: set-ok
    file: ci-src/ci/concourse/tasks/set-status.yml
    params:
      GITHUB_REPO_OWNER: *github_repo
      GITHUB_STATUS_SHA: *github_status_sha
      GITHUB_STATUS_VALUE: success
      GITHUB_TOKEN: *github_access_token
    on_failure: &on_failure
      task: set-failure
      file: ci-src/ci/concourse/tasks/set-status.yml
      params:
        GITHUB_REPO_OWNER: *github_repo
        GITHUB_STATUS_SHA: *github_status_sha
        GITHUB_STATUS_VALUE: failure
        GITHUB_TOKEN: *github_access_token
