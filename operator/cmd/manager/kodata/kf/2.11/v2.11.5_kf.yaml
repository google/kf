# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Namespace
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  name: kf
  labels:
    app.kubernetes.io/name: kf
    app.kubernetes.io/version: v2.11.5
    kf.dev/release: v2.11.5

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  name: kf-admin
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        kf.dev/controller: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kf-core
  labels:
    kf.dev/controller: "true"
    kf.dev/release: v2.11.5
rules:
  - apiGroups: [""]
    resources: ["pods", "namespaces", "secrets", "configmaps", "endpoints", "services", "events", "serviceaccounts", "persistentvolumes", "persistentvolumeclaims"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: [""]
    resources: ["endpoints/restricted"] # Permission for RestrictedEndpointsAdmission
    verbs: ["create"]
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/finalizers"] # finalizers are needed for the owner reference of the webhook
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["kf.dev", "spaces.kf.dev"]
    resources: ["*", "*/status", "*/finalizers"]
    verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["taskruns", "clustertasks", "tasks", "pipelineruns"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.istio.io"]
    resources: ["virtualservices"]
    verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["networkpolicies"]
    verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch", "watch"]
  - apiGroups: ["batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch", "watch"]
  - apiGroups: ["anthos.gke.io"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["apiregistration.k8s.io"]
    resources: ["apiservices"]
    verbs: ["get", "list", "update", "patch", "watch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings", "clusterrolebindings", "clusterroles"]
    verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch", "watch"]
  - apiGroups: ["iam.cnrm.cloud.google.com"]
    resources: ["iampolicies"]
    verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch", "watch"]
  - apiGroups: ["builds.appdevexperience.dev"]
    resources: ["*/status", "builds"]
    verbs: ["get", "list", "update", "delete", "patch", "watch"]
  - apiGroups: ["upload.kf.dev"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles"]
    verbs: ["bind"]

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  name: controller
  namespace: kf
  labels:
    kf.dev/release: v2.11.5

---
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: kf-cluster-reader
rules:
  - apiGroups: ["kf.dev"]
    resources: ["spaces", "clusterservicebrokers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]
    resourceNames: ["kf"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: space-manager
rules:
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["rolebindings"]
    verbs: ["get", "list", "update", "patch", "watch"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles"]
    verbs: ["bind"]
    resourceNames: ["space-manager", "space-developer", "space-auditor"]
  - apiGroups: ["kf.dev"]
    resources: ["apps"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: space-developer
rules:
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["rolebindings"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["kf.dev"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["upload.kf.dev"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "update", "delete", "patch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["networkpolicies"]
    verbs: ["*"]
  - apiGroups: ["builds.appdevexperience.dev"]
    resources: ["*/status", "builds"]
    verbs: ["get", "list", "update", "delete", "patch", "watch"]
  - apiGroups: ["data.builds.appdevexperience.dev"]
    resources: ["*"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch", "proxy"]
  - apiGroups: ["tekton.dev"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: space-auditor
rules:
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["rolebindings"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["kf.dev"]
    resources: ["apps"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["*"]

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: kf-controller-admin
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: kf
roleRef:
  kind: ClusterRole
  name: kf-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: kf-controller:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: kf
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: kf-subresource-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: kf

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  annotations:
    operator.knative.dev/mode: EnsureExists
  labels:
    kf.dev/release: v2.11.5
  name: external-gateway
  namespace: kf
spec:
  selector:
    # Attach to the istio-ingress service in the gke-system namespace.
    istio: ingressgateway
  servers:
    - hosts:
        - '*'
      port:
        name: http
        number: 80
        protocol: HTTP

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: internal-gateway
  namespace: kf
spec:
  selector:
    # Attach to the cluster-local-gateway service in the gke-system namespace.
    istio: cluster-local-gateway
  servers:
    - hosts:
        - '*'
      port:
        name: http
        number: 80
        protocol: HTTP

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: apps.kf.dev
spec:
  group: kf.dev
  names:
    kind: App
    plural: apps
    singular: app
    categories:
      - all
      - kf
  scope: Namespaced
  preserveUnknownFields: false
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        scale:
          specReplicasPath: .spec.instances.replicas
          statusReplicasPath: .status.instances.replicas
          labelSelectorPath: .status.instances.labelSelector
        status: {}
      schema:
        openAPIV3Schema:
          description: App is a 12-factor application deployed to Knative. It encompasses source code, configuration, and the current state of the application.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AppSpec is the desired configuration for an App.
              type: object
              required:
                - build
              properties:
                build:
                  description: Build defines the App's build configuration.
                  type: object
                  properties:
                    buildRef:
                      description: 'BuildRef references an ADX Build (group: builds.appdevexperience.dev) that should be used instead of a Build. NOTE: This API is currently in preview.'
                      type: object
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                    image:
                      description: Image is a ready-to-go container image to use instead of the Build.
                      type: string
                    spec:
                      description: Spec contains the configuration of the Build to create for the App.
                      type: object
                      properties:
                        apiVersion:
                          description: API version of the referent
                          type: string
                        env:
                          description: Env represents the environment variables to apply when building the App.
                          type: array
                          items:
                            description: EnvVar represents an environment variable present in a Container.
                            type: object
                            required:
                              - name
                            properties:
                              name:
                                description: Name of the environment variable. Must be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's value. Cannot be used if value is not empty.
                                type: object
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    type: object
                                    required:
                                      - key
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or its key must be defined
                                        type: boolean
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                    type: object
                                    required:
                                      - fieldPath
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the specified API version.
                                        type: string
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                    type: object
                                    required:
                                      - resource
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                  secretKeyRef:
                                    description: Selects a key of a secret in the pod's namespace
                                    type: object
                                    required:
                                      - key
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its key must be defined
                                        type: boolean
                        kind:
                          description: Kind indicates the kind of the task, namespaced or cluster scoped.
                          type: string
                        name:
                          description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                          type: string
                        nodeSelector:
                          description: NodeSelector represents the selectors to apply when building and deploying the App.
                          type: object
                          additionalProperties:
                            type: string
                        params:
                          description: Params is the map of keys and values used for the custom task
                          type: array
                          items:
                            description: BuildParam holds custom parameters for the build being run. Unlike Tekton Params, Kf only supports string values, but the type is otherwise over-the-wire compatible.
                            type: object
                            required:
                              - name
                              - value
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                        sourcePackage:
                          description: SourcePackage references the SourcePackage for the source code of the App. If left empty, the SOURCE_IMAGE environment variable will not be added to the resulting TaskRun.
                          type: object
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                    updateRequests:
                      description: UpdateRequests is a unique identifier for a Build. Updating sub-values will trigger a new value.
                      type: integer
                instances:
                  description: Instances defines the scaling rules for the App.
                  type: object
                  properties:
                    autoscaling:
                      description: Autoscaling defines an App's autoscaling configurations.
                      type: object
                      properties:
                        enabled:
                          description: Enabled determines if the App should have autoscaling enabled or not.
                          type: boolean
                        maxReplicas:
                          description: MaxReplicas defines the maximum number of desired instances.
                          type: integer
                          format: int32
                        minReplicas:
                          description: MinReplicas defines the minimum number of desired instances.
                          type: integer
                          format: int32
                        rules:
                          description: Rules defines the autoscaling rules for the App.
                          type: array
                          items:
                            description: AppAutoscalingRule defines the autoscaling rules for an App.
                            type: object
                            properties:
                              ruleType:
                                description: RuleType is the name of the scaling rule (e.g., CPU).
                                type: string
                              target:
                                description: Target value for the metric. Unit of target depends on the rule type. For CPU, it will be a percentage represented by number in range (0, 100].
                                type: integer
                                format: int32
                    exactly:
                      description: DeprecatedExactly value is copied to Replicas.
                      type: integer
                      format: int32
                    replicas:
                      description: Replicas defines a static number of desired instances.
                      type: integer
                      format: int32
                    stopped:
                      description: Stopped determines if the App should be running or not.
                      type: boolean
                routes:
                  description: Routes defines the routing rules for the App.
                  type: array
                  items:
                    description: RouteWeightBinding contains the fields of a route.
                    type: object
                    properties:
                      destinationPort:
                        description: DestinationPort contains the port number of the service the Route connects to. It can only be nil on Apps or for routes that were created before it was a required field, in which case it will be defaulted to 80 at runtime.
                        type: integer
                        format: int32
                      domain:
                        description: Domain is the domain of the route (e.g, in hostname.example.com it would be example.com).
                        type: string
                      hostname:
                        description: Hostname is the hostname or subdomain of the route (e.g, in hostname.example.com it would be hostname).
                        type: string
                      path:
                        description: Path is the URL path of the route.
                        type: string
                      weight:
                        description: Weight is the weight of the app in the route. Every app has a default weight of 1, meaning if there are multiple apps mapped to a route, traffic will be uniformly distributed among them. If an app is stopped, its weight is 0.
                        type: integer
                        format: int32
                template:
                  description: Template defines the App's runtime configuration.
                  type: object
                  required:
                    - updateRequests
                  properties:
                    spec:
                      description: Template is a PodSpec with additional restrictions. The image name is ignored. The Spec contains configuration for the App's Pod. (Env, Vars, Quotas, etc)
                      type: object
                      required:
                        - containers
                      properties:
                        activeDeadlineSeconds:
                          description: Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
                          type: integer
                          format: int64
                        affinity:
                          description: If specified, the pod's scheduling constraints
                          type: object
                          properties:
                            nodeAffinity:
                              description: Describes node affinity scheduling rules for the pod.
                              type: object
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
                                  type: array
                                  items:
                                    description: An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                    type: object
                                    required:
                                      - preference
                                      - weight
                                    properties:
                                      preference:
                                        description: A node selector term, associated with the corresponding weight.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: A list of node selector requirements by node's labels.
                                            type: array
                                            items:
                                              description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchFields:
                                            description: A list of node selector requirements by node's fields.
                                            type: array
                                            items:
                                              description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                      weight:
                                        description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                        type: integer
                                        format: int32
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
                                  type: object
                                  required:
                                    - nodeSelectorTerms
                                  properties:
                                    nodeSelectorTerms:
                                      description: Required. A list of node selector terms. The terms are ORed.
                                      type: array
                                      items:
                                        description: A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: A list of node selector requirements by node's labels.
                                            type: array
                                            items:
                                              description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchFields:
                                            description: A list of node selector requirements by node's fields.
                                            type: array
                                            items:
                                              description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: The label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                  type: string
                                                values:
                                                  description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                            podAffinity:
                              description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                              type: object
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                  type: array
                                  items:
                                    description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                    type: object
                                    required:
                                      - podAffinityTerm
                                      - weight
                                    properties:
                                      podAffinityTerm:
                                        description: Required. A pod affinity term, associated with the corresponding weight.
                                        type: object
                                        required:
                                          - topologyKey
                                        properties:
                                          labelSelector:
                                            description: A label query over a set of resources, in this case pods.
                                            type: object
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                type: array
                                                items:
                                                  description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                  type: object
                                                  required:
                                                    - key
                                                    - operator
                                                  properties:
                                                    key:
                                                      description: key is the label key that the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                      type: array
                                                      items:
                                                        type: string
                                              matchLabels:
                                                description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                                additionalProperties:
                                                  type: string
                                          namespaces:
                                            description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                            type: array
                                            items:
                                              type: string
                                          topologyKey:
                                            description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                            type: string
                                      weight:
                                        description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                        type: integer
                                        format: int32
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                  type: array
                                  items:
                                    description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                    type: object
                                    required:
                                      - topologyKey
                                    properties:
                                      labelSelector:
                                        description: A label query over a set of resources, in this case pods.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            type: array
                                            items:
                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                            additionalProperties:
                                              type: string
                                      namespaces:
                                        description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                        type: array
                                        items:
                                          type: string
                                      topologyKey:
                                        description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                        type: string
                            podAntiAffinity:
                              description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                              type: object
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  description: The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
                                  type: array
                                  items:
                                    description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                    type: object
                                    required:
                                      - podAffinityTerm
                                      - weight
                                    properties:
                                      podAffinityTerm:
                                        description: Required. A pod affinity term, associated with the corresponding weight.
                                        type: object
                                        required:
                                          - topologyKey
                                        properties:
                                          labelSelector:
                                            description: A label query over a set of resources, in this case pods.
                                            type: object
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                type: array
                                                items:
                                                  description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                  type: object
                                                  required:
                                                    - key
                                                    - operator
                                                  properties:
                                                    key:
                                                      description: key is the label key that the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                      type: array
                                                      items:
                                                        type: string
                                              matchLabels:
                                                description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                                additionalProperties:
                                                  type: string
                                          namespaces:
                                            description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                            type: array
                                            items:
                                              type: string
                                          topologyKey:
                                            description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                            type: string
                                      weight:
                                        description: weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
                                        type: integer
                                        format: int32
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  description: If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                  type: array
                                  items:
                                    description: Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
                                    type: object
                                    required:
                                      - topologyKey
                                    properties:
                                      labelSelector:
                                        description: A label query over a set of resources, in this case pods.
                                        type: object
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            type: array
                                            items:
                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              type: object
                                              required:
                                                - key
                                                - operator
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  type: array
                                                  items:
                                                    type: string
                                          matchLabels:
                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                            additionalProperties:
                                              type: string
                                      namespaces:
                                        description: namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
                                        type: array
                                        items:
                                          type: string
                                      topologyKey:
                                        description: This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
                                        type: string
                        automountServiceAccountToken:
                          description: AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
                          type: boolean
                        containers:
                          description: List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
                          type: array
                          items:
                            description: A single application container that you want to run within a pod.
                            type: object
                            required:
                              - name
                            properties:
                              args:
                                description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                type: array
                                items:
                                  type: string
                              command:
                                description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                type: array
                                items:
                                  type: string
                              env:
                                description: List of environment variables to set in the container. Cannot be updated.
                                type: array
                                items:
                                  description: EnvVar represents an environment variable present in a Container.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's value. Cannot be used if value is not empty.
                                      type: object
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          type: object
                                          required:
                                            - key
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap or its key must be defined
                                              type: boolean
                                        fieldRef:
                                          description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                          type: object
                                          required:
                                            - fieldPath
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select in the specified API version.
                                              type: string
                                        resourceFieldRef:
                                          description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                          type: object
                                          required:
                                            - resource
                                          properties:
                                            containerName:
                                              description: 'Container name: required for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              description: Specifies the output format of the exposed resources, defaults to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to select'
                                              type: string
                                        secretKeyRef:
                                          description: Selects a key of a secret in the pod's namespace
                                          type: object
                                          required:
                                            - key
                                          properties:
                                            key:
                                              description: The key of the secret to select from.  Must be a valid secret key.
                                              type: string
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret or its key must be defined
                                              type: boolean
                              envFrom:
                                description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                                type: array
                                items:
                                  description: EnvFromSource represents the source of a set of ConfigMaps
                                  type: object
                                  properties:
                                    configMapRef:
                                      description: The ConfigMap to select from
                                      type: object
                                      properties:
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap must be defined
                                          type: boolean
                                    prefix:
                                      description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                      type: string
                                    secretRef:
                                      description: The Secret to select from
                                      type: object
                                      properties:
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret must be defined
                                          type: boolean
                              image:
                                description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                                type: string
                              imagePullPolicy:
                                description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                type: string
                              lifecycle:
                                description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
                                type: object
                                properties:
                                  postStart:
                                    description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                    type: object
                                    properties:
                                      exec:
                                        description: One and only one of the following should be specified. Exec specifies the action to take.
                                        type: object
                                        properties:
                                          command:
                                            description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                            type: array
                                            items:
                                              type: string
                                      httpGet:
                                        description: HTTPGet specifies the http request to perform.
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in the request. HTTP allows repeated headers.
                                            type: array
                                            items:
                                              description: HTTPHeader describes a custom header to be used in HTTP probes
                                              type: object
                                              required:
                                                - name
                                                - value
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                          path:
                                            description: Path to access on the HTTP server.
                                            type: string
                                          port:
                                            description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting to the host. Defaults to HTTP.
                                            type: string
                                      tcpSocket:
                                        description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                                  preStop:
                                    description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                    type: object
                                    properties:
                                      exec:
                                        description: One and only one of the following should be specified. Exec specifies the action to take.
                                        type: object
                                        properties:
                                          command:
                                            description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                            type: array
                                            items:
                                              type: string
                                      httpGet:
                                        description: HTTPGet specifies the http request to perform.
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in the request. HTTP allows repeated headers.
                                            type: array
                                            items:
                                              description: HTTPHeader describes a custom header to be used in HTTP probes
                                              type: object
                                              required:
                                                - name
                                                - value
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                          path:
                                            description: Path to access on the HTTP server.
                                            type: string
                                          port:
                                            description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting to the host. Defaults to HTTP.
                                            type: string
                                      tcpSocket:
                                        description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                              livenessProbe:
                                description: 'Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                type: object
                                properties:
                                  exec:
                                    description: One and only one of the following should be specified. Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  httpGet:
                                    description: HTTPGet specifies the http request to perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request. HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: HTTPHeader describes a custom header to be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to the host. Defaults to HTTP.
                                        type: string
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                                  periodSeconds:
                                    description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  successThreshold:
                                    description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                              name:
                                description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                                type: string
                              ports:
                                description: List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
                                type: array
                                items:
                                  description: ContainerPort represents a network port in a single container.
                                  type: object
                                  required:
                                    - containerPort
                                  properties:
                                    containerPort:
                                      description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                                      type: integer
                                      format: int32
                                    hostIP:
                                      description: What host IP to bind the external port to.
                                      type: string
                                    hostPort:
                                      description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                                      type: integer
                                      format: int32
                                    name:
                                      description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                                      type: string
                                    protocol:
                                      description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                                      type: string
                                      default: TCP
                                x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                x-kubernetes-list-type: map
                              readinessProbe:
                                description: 'Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                type: object
                                properties:
                                  exec:
                                    description: One and only one of the following should be specified. Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  httpGet:
                                    description: HTTPGet specifies the http request to perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request. HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: HTTPHeader describes a custom header to be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to the host. Defaults to HTTP.
                                        type: string
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                                  periodSeconds:
                                    description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  successThreshold:
                                    description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                              resources:
                                description: 'Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                                properties:
                                  limits:
                                    description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                    additionalProperties:
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      x-kubernetes-int-or-string: true
                                  requests:
                                    description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                    additionalProperties:
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      x-kubernetes-int-or-string: true
                              securityContext:
                                description: 'Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                type: object
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
                                    type: object
                                    properties:
                                      add:
                                        description: Added capabilities
                                        type: array
                                        items:
                                          description: Capability represent POSIX capabilities type
                                          type: string
                                      drop:
                                        description: Removed capabilities
                                        type: array
                                        items:
                                          description: Capability represent POSIX capabilities type
                                          type: string
                                  privileged:
                                    description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only root filesystem. Default is false.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: integer
                                    format: int64
                                  runAsNonRoot:
                                    description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: integer
                                    format: int64
                                  seLinuxOptions:
                                    description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: object
                                    properties:
                                      level:
                                        description: Level is SELinux level label that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label that applies to the container.
                                        type: string
                                  seccompProfile:
                                    description: The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
                                    type: object
                                    required:
                                      - type
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied."
                                        type: string
                                  windowsOptions:
                                    description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: object
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                        type: string
                                      runAsUserName:
                                        description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        type: string
                              startupProbe:
                                description: 'StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod''s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                type: object
                                properties:
                                  exec:
                                    description: One and only one of the following should be specified. Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  httpGet:
                                    description: HTTPGet specifies the http request to perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request. HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: HTTPHeader describes a custom header to be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to the host. Defaults to HTTP.
                                        type: string
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                                  periodSeconds:
                                    description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  successThreshold:
                                    description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                              stdin:
                                description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                                type: boolean
                              stdinOnce:
                                description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                                type: boolean
                              terminationMessagePath:
                                description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                                type: string
                              terminationMessagePolicy:
                                description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                                type: string
                              tty:
                                description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                                type: boolean
                              volumeDevices:
                                description: volumeDevices is the list of block devices to be used by the container.
                                type: array
                                items:
                                  description: volumeDevice describes a mapping of a raw block device within a container.
                                  type: object
                                  required:
                                    - devicePath
                                    - name
                                  properties:
                                    devicePath:
                                      description: devicePath is the path inside of the container that the device will be mapped to.
                                      type: string
                                    name:
                                      description: name must match the name of a persistentVolumeClaim in the pod
                                      type: string
                              volumeMounts:
                                description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                                type: array
                                items:
                                  description: VolumeMount describes a mounting of a Volume within a container.
                                  type: object
                                  required:
                                    - mountPath
                                    - name
                                  properties:
                                    mountPath:
                                      description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                                      type: string
                                    mountPropagation:
                                      description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                                      type: boolean
                                    subPath:
                                      description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                      type: string
                                    subPathExpr:
                                      description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                      type: string
                              workingDir:
                                description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                                type: string
                        dnsConfig:
                          description: Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.
                          type: object
                          properties:
                            nameservers:
                              description: A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
                              type: array
                              items:
                                type: string
                            options:
                              description: A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
                              type: array
                              items:
                                description: PodDNSConfigOption defines DNS resolver options of a pod.
                                type: object
                                properties:
                                  name:
                                    description: Required.
                                    type: string
                                  value:
                                    type: string
                            searches:
                              description: A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
                              type: array
                              items:
                                type: string
                        dnsPolicy:
                          description: Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
                          type: string
                        enableServiceLinks:
                          description: 'EnableServiceLinks indicates whether information about services should be injected into pod''s environment variables, matching the syntax of Docker links. Optional: Defaults to true.'
                          type: boolean
                        ephemeralContainers:
                          description: List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource. This field is alpha-level and is only honored by servers that enable the EphemeralContainers feature.
                          type: array
                          items:
                            description: An EphemeralContainer is a container that may be added temporarily to an existing pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a pod is removed or restarted. If an ephemeral container causes a pod to exceed its resource allocation, the pod may be evicted. Ephemeral containers may not be added by directly updating the pod spec. They must be added via the pod's ephemeralcontainers subresource, and they will appear in the pod spec once added. This is an alpha feature enabled by the EphemeralContainers feature flag.
                            type: object
                            required:
                              - name
                            properties:
                              args:
                                description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                type: array
                                items:
                                  type: string
                              command:
                                description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                type: array
                                items:
                                  type: string
                              env:
                                description: List of environment variables to set in the container. Cannot be updated.
                                type: array
                                items:
                                  description: EnvVar represents an environment variable present in a Container.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's value. Cannot be used if value is not empty.
                                      type: object
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          type: object
                                          required:
                                            - key
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap or its key must be defined
                                              type: boolean
                                        fieldRef:
                                          description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                          type: object
                                          required:
                                            - fieldPath
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select in the specified API version.
                                              type: string
                                        resourceFieldRef:
                                          description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                          type: object
                                          required:
                                            - resource
                                          properties:
                                            containerName:
                                              description: 'Container name: required for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              description: Specifies the output format of the exposed resources, defaults to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to select'
                                              type: string
                                        secretKeyRef:
                                          description: Selects a key of a secret in the pod's namespace
                                          type: object
                                          required:
                                            - key
                                          properties:
                                            key:
                                              description: The key of the secret to select from.  Must be a valid secret key.
                                              type: string
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret or its key must be defined
                                              type: boolean
                              envFrom:
                                description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                                type: array
                                items:
                                  description: EnvFromSource represents the source of a set of ConfigMaps
                                  type: object
                                  properties:
                                    configMapRef:
                                      description: The ConfigMap to select from
                                      type: object
                                      properties:
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap must be defined
                                          type: boolean
                                    prefix:
                                      description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                      type: string
                                    secretRef:
                                      description: The Secret to select from
                                      type: object
                                      properties:
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret must be defined
                                          type: boolean
                              image:
                                description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images'
                                type: string
                              imagePullPolicy:
                                description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                type: string
                              lifecycle:
                                description: Lifecycle is not allowed for ephemeral containers.
                                type: object
                                properties:
                                  postStart:
                                    description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                    type: object
                                    properties:
                                      exec:
                                        description: One and only one of the following should be specified. Exec specifies the action to take.
                                        type: object
                                        properties:
                                          command:
                                            description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                            type: array
                                            items:
                                              type: string
                                      httpGet:
                                        description: HTTPGet specifies the http request to perform.
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in the request. HTTP allows repeated headers.
                                            type: array
                                            items:
                                              description: HTTPHeader describes a custom header to be used in HTTP probes
                                              type: object
                                              required:
                                                - name
                                                - value
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                          path:
                                            description: Path to access on the HTTP server.
                                            type: string
                                          port:
                                            description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting to the host. Defaults to HTTP.
                                            type: string
                                      tcpSocket:
                                        description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                                  preStop:
                                    description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                    type: object
                                    properties:
                                      exec:
                                        description: One and only one of the following should be specified. Exec specifies the action to take.
                                        type: object
                                        properties:
                                          command:
                                            description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                            type: array
                                            items:
                                              type: string
                                      httpGet:
                                        description: HTTPGet specifies the http request to perform.
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in the request. HTTP allows repeated headers.
                                            type: array
                                            items:
                                              description: HTTPHeader describes a custom header to be used in HTTP probes
                                              type: object
                                              required:
                                                - name
                                                - value
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                          path:
                                            description: Path to access on the HTTP server.
                                            type: string
                                          port:
                                            description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting to the host. Defaults to HTTP.
                                            type: string
                                      tcpSocket:
                                        description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                              livenessProbe:
                                description: Probes are not allowed for ephemeral containers.
                                type: object
                                properties:
                                  exec:
                                    description: One and only one of the following should be specified. Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  httpGet:
                                    description: HTTPGet specifies the http request to perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request. HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: HTTPHeader describes a custom header to be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to the host. Defaults to HTTP.
                                        type: string
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                                  periodSeconds:
                                    description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  successThreshold:
                                    description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                              name:
                                description: Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.
                                type: string
                              ports:
                                description: Ports are not allowed for ephemeral containers.
                                type: array
                                items:
                                  description: ContainerPort represents a network port in a single container.
                                  type: object
                                  required:
                                    - containerPort
                                  properties:
                                    containerPort:
                                      description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                                      type: integer
                                      format: int32
                                    hostIP:
                                      description: What host IP to bind the external port to.
                                      type: string
                                    hostPort:
                                      description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                                      type: integer
                                      format: int32
                                    name:
                                      description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                                      type: string
                                    protocol:
                                      description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                                      type: string
                                      default: TCP
                              readinessProbe:
                                description: Probes are not allowed for ephemeral containers.
                                type: object
                                properties:
                                  exec:
                                    description: One and only one of the following should be specified. Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  httpGet:
                                    description: HTTPGet specifies the http request to perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request. HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: HTTPHeader describes a custom header to be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to the host. Defaults to HTTP.
                                        type: string
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                                  periodSeconds:
                                    description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  successThreshold:
                                    description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                              resources:
                                description: Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod.
                                type: object
                                properties:
                                  limits:
                                    description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                    additionalProperties:
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      x-kubernetes-int-or-string: true
                                  requests:
                                    description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                    additionalProperties:
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      x-kubernetes-int-or-string: true
                              securityContext:
                                description: SecurityContext is not allowed for ephemeral containers.
                                type: object
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
                                    type: object
                                    properties:
                                      add:
                                        description: Added capabilities
                                        type: array
                                        items:
                                          description: Capability represent POSIX capabilities type
                                          type: string
                                      drop:
                                        description: Removed capabilities
                                        type: array
                                        items:
                                          description: Capability represent POSIX capabilities type
                                          type: string
                                  privileged:
                                    description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only root filesystem. Default is false.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: integer
                                    format: int64
                                  runAsNonRoot:
                                    description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: integer
                                    format: int64
                                  seLinuxOptions:
                                    description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: object
                                    properties:
                                      level:
                                        description: Level is SELinux level label that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label that applies to the container.
                                        type: string
                                  seccompProfile:
                                    description: The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
                                    type: object
                                    required:
                                      - type
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied."
                                        type: string
                                  windowsOptions:
                                    description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: object
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                        type: string
                                      runAsUserName:
                                        description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        type: string
                              startupProbe:
                                description: Probes are not allowed for ephemeral containers.
                                type: object
                                properties:
                                  exec:
                                    description: One and only one of the following should be specified. Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  httpGet:
                                    description: HTTPGet specifies the http request to perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request. HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: HTTPHeader describes a custom header to be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to the host. Defaults to HTTP.
                                        type: string
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                                  periodSeconds:
                                    description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  successThreshold:
                                    description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                              stdin:
                                description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                                type: boolean
                              stdinOnce:
                                description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                                type: boolean
                              targetContainerName:
                                description: If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container is run in whatever namespaces are shared for the pod. Note that the container runtime must support this feature.
                                type: string
                              terminationMessagePath:
                                description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                                type: string
                              terminationMessagePolicy:
                                description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                                type: string
                              tty:
                                description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                                type: boolean
                              volumeDevices:
                                description: volumeDevices is the list of block devices to be used by the container.
                                type: array
                                items:
                                  description: volumeDevice describes a mapping of a raw block device within a container.
                                  type: object
                                  required:
                                    - devicePath
                                    - name
                                  properties:
                                    devicePath:
                                      description: devicePath is the path inside of the container that the device will be mapped to.
                                      type: string
                                    name:
                                      description: name must match the name of a persistentVolumeClaim in the pod
                                      type: string
                              volumeMounts:
                                description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                                type: array
                                items:
                                  description: VolumeMount describes a mounting of a Volume within a container.
                                  type: object
                                  required:
                                    - mountPath
                                    - name
                                  properties:
                                    mountPath:
                                      description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                                      type: string
                                    mountPropagation:
                                      description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                                      type: boolean
                                    subPath:
                                      description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                      type: string
                                    subPathExpr:
                                      description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                      type: string
                              workingDir:
                                description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                                type: string
                        hostAliases:
                          description: HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.
                          type: array
                          items:
                            description: HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
                            type: object
                            properties:
                              hostnames:
                                description: Hostnames for the above IP address.
                                type: array
                                items:
                                  type: string
                              ip:
                                description: IP address of the host file entry.
                                type: string
                        hostIPC:
                          description: 'Use the host''s ipc namespace. Optional: Default to false.'
                          type: boolean
                        hostNetwork:
                          description: Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
                          type: boolean
                        hostPID:
                          description: 'Use the host''s pid namespace. Optional: Default to false.'
                          type: boolean
                        hostname:
                          description: Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
                          type: string
                        imagePullSecrets:
                          description: 'ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                          type: array
                          items:
                            description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                            type: object
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                        initContainers:
                          description: 'List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                          type: array
                          items:
                            description: A single application container that you want to run within a pod.
                            type: object
                            required:
                              - name
                            properties:
                              args:
                                description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                type: array
                                items:
                                  type: string
                              command:
                                description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                type: array
                                items:
                                  type: string
                              env:
                                description: List of environment variables to set in the container. Cannot be updated.
                                type: array
                                items:
                                  description: EnvVar represents an environment variable present in a Container.
                                  type: object
                                  required:
                                    - name
                                  properties:
                                    name:
                                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's value. Cannot be used if value is not empty.
                                      type: object
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          type: object
                                          required:
                                            - key
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap or its key must be defined
                                              type: boolean
                                        fieldRef:
                                          description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                          type: object
                                          required:
                                            - fieldPath
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select in the specified API version.
                                              type: string
                                        resourceFieldRef:
                                          description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                          type: object
                                          required:
                                            - resource
                                          properties:
                                            containerName:
                                              description: 'Container name: required for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              description: Specifies the output format of the exposed resources, defaults to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to select'
                                              type: string
                                        secretKeyRef:
                                          description: Selects a key of a secret in the pod's namespace
                                          type: object
                                          required:
                                            - key
                                          properties:
                                            key:
                                              description: The key of the secret to select from.  Must be a valid secret key.
                                              type: string
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret or its key must be defined
                                              type: boolean
                              envFrom:
                                description: List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
                                type: array
                                items:
                                  description: EnvFromSource represents the source of a set of ConfigMaps
                                  type: object
                                  properties:
                                    configMapRef:
                                      description: The ConfigMap to select from
                                      type: object
                                      properties:
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap must be defined
                                          type: boolean
                                    prefix:
                                      description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                                      type: string
                                    secretRef:
                                      description: The Secret to select from
                                      type: object
                                      properties:
                                        name:
                                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret must be defined
                                          type: boolean
                              image:
                                description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.'
                                type: string
                              imagePullPolicy:
                                description: 'Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                type: string
                              lifecycle:
                                description: Actions that the management system should take in response to container lifecycle events. Cannot be updated.
                                type: object
                                properties:
                                  postStart:
                                    description: 'PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                    type: object
                                    properties:
                                      exec:
                                        description: One and only one of the following should be specified. Exec specifies the action to take.
                                        type: object
                                        properties:
                                          command:
                                            description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                            type: array
                                            items:
                                              type: string
                                      httpGet:
                                        description: HTTPGet specifies the http request to perform.
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in the request. HTTP allows repeated headers.
                                            type: array
                                            items:
                                              description: HTTPHeader describes a custom header to be used in HTTP probes
                                              type: object
                                              required:
                                                - name
                                                - value
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                          path:
                                            description: Path to access on the HTTP server.
                                            type: string
                                          port:
                                            description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting to the host. Defaults to HTTP.
                                            type: string
                                      tcpSocket:
                                        description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                                  preStop:
                                    description: 'PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod''s termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod''s termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                    type: object
                                    properties:
                                      exec:
                                        description: One and only one of the following should be specified. Exec specifies the action to take.
                                        type: object
                                        properties:
                                          command:
                                            description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                            type: array
                                            items:
                                              type: string
                                      httpGet:
                                        description: HTTPGet specifies the http request to perform.
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                            type: string
                                          httpHeaders:
                                            description: Custom headers to set in the request. HTTP allows repeated headers.
                                            type: array
                                            items:
                                              description: HTTPHeader describes a custom header to be used in HTTP probes
                                              type: object
                                              required:
                                                - name
                                                - value
                                              properties:
                                                name:
                                                  description: The header field name
                                                  type: string
                                                value:
                                                  description: The header field value
                                                  type: string
                                          path:
                                            description: Path to access on the HTTP server.
                                            type: string
                                          port:
                                            description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                                          scheme:
                                            description: Scheme to use for connecting to the host. Defaults to HTTP.
                                            type: string
                                      tcpSocket:
                                        description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                        type: object
                                        required:
                                          - port
                                        properties:
                                          host:
                                            description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                            type: string
                                          port:
                                            description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            x-kubernetes-int-or-string: true
                              livenessProbe:
                                description: 'Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                type: object
                                properties:
                                  exec:
                                    description: One and only one of the following should be specified. Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  httpGet:
                                    description: HTTPGet specifies the http request to perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request. HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: HTTPHeader describes a custom header to be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to the host. Defaults to HTTP.
                                        type: string
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                                  periodSeconds:
                                    description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  successThreshold:
                                    description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                              name:
                                description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                                type: string
                              ports:
                                description: List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
                                type: array
                                items:
                                  description: ContainerPort represents a network port in a single container.
                                  type: object
                                  required:
                                    - containerPort
                                  properties:
                                    containerPort:
                                      description: Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
                                      type: integer
                                      format: int32
                                    hostIP:
                                      description: What host IP to bind the external port to.
                                      type: string
                                    hostPort:
                                      description: Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
                                      type: integer
                                      format: int32
                                    name:
                                      description: If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
                                      type: string
                                    protocol:
                                      description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
                                      type: string
                                      default: TCP
                                x-kubernetes-list-map-keys:
                                  - containerPort
                                  - protocol
                                x-kubernetes-list-type: map
                              readinessProbe:
                                description: 'Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                type: object
                                properties:
                                  exec:
                                    description: One and only one of the following should be specified. Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  httpGet:
                                    description: HTTPGet specifies the http request to perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request. HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: HTTPHeader describes a custom header to be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to the host. Defaults to HTTP.
                                        type: string
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                                  periodSeconds:
                                    description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  successThreshold:
                                    description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                              resources:
                                description: 'Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                                properties:
                                  limits:
                                    description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                    additionalProperties:
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      x-kubernetes-int-or-string: true
                                  requests:
                                    description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                    additionalProperties:
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      x-kubernetes-int-or-string: true
                              securityContext:
                                description: 'Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                type: object
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
                                    type: object
                                    properties:
                                      add:
                                        description: Added capabilities
                                        type: array
                                        items:
                                          description: Capability represent POSIX capabilities type
                                          type: string
                                      drop:
                                        description: Removed capabilities
                                        type: array
                                        items:
                                          description: Capability represent POSIX capabilities type
                                          type: string
                                  privileged:
                                    description: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only root filesystem. Default is false.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: integer
                                    format: int64
                                  runAsNonRoot:
                                    description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: integer
                                    format: int64
                                  seLinuxOptions:
                                    description: The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: object
                                    properties:
                                      level:
                                        description: Level is SELinux level label that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label that applies to the container.
                                        type: string
                                  seccompProfile:
                                    description: The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
                                    type: object
                                    required:
                                      - type
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied."
                                        type: string
                                  windowsOptions:
                                    description: The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: object
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                        type: string
                                      runAsUserName:
                                        description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        type: string
                              startupProbe:
                                description: 'StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod''s lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is a beta feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                type: object
                                properties:
                                  exec:
                                    description: One and only one of the following should be specified. Exec specifies the action to take.
                                    type: object
                                    properties:
                                      command:
                                        description: Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                        type: array
                                        items:
                                          type: string
                                  failureThreshold:
                                    description: Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  httpGet:
                                    description: HTTPGet specifies the http request to perform.
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the request. HTTP allows repeated headers.
                                        type: array
                                        items:
                                          description: HTTPHeader describes a custom header to be used in HTTP probes
                                          type: object
                                          required:
                                            - name
                                            - value
                                          properties:
                                            name:
                                              description: The header field name
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        description: Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting to the host. Defaults to HTTP.
                                        type: string
                                  initialDelaySeconds:
                                    description: 'Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                                  periodSeconds:
                                    description: How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  successThreshold:
                                    description: Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                    type: integer
                                    format: int32
                                  tcpSocket:
                                    description: 'TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook'
                                    type: object
                                    required:
                                      - port
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        description: Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                  timeoutSeconds:
                                    description: 'Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                    type: integer
                                    format: int32
                              stdin:
                                description: Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
                                type: boolean
                              stdinOnce:
                                description: Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
                                type: boolean
                              terminationMessagePath:
                                description: 'Optional: Path at which the file to which the container''s termination message will be written is mounted into the container''s filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                                type: string
                              terminationMessagePolicy:
                                description: Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
                                type: string
                              tty:
                                description: Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
                                type: boolean
                              volumeDevices:
                                description: volumeDevices is the list of block devices to be used by the container.
                                type: array
                                items:
                                  description: volumeDevice describes a mapping of a raw block device within a container.
                                  type: object
                                  required:
                                    - devicePath
                                    - name
                                  properties:
                                    devicePath:
                                      description: devicePath is the path inside of the container that the device will be mapped to.
                                      type: string
                                    name:
                                      description: name must match the name of a persistentVolumeClaim in the pod
                                      type: string
                              volumeMounts:
                                description: Pod volumes to mount into the container's filesystem. Cannot be updated.
                                type: array
                                items:
                                  description: VolumeMount describes a mounting of a Volume within a container.
                                  type: object
                                  required:
                                    - mountPath
                                    - name
                                  properties:
                                    mountPath:
                                      description: Path within the container at which the volume should be mounted.  Must not contain ':'.
                                      type: string
                                    mountPropagation:
                                      description: mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
                                      type: string
                                    name:
                                      description: This must match the Name of a Volume.
                                      type: string
                                    readOnly:
                                      description: Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
                                      type: boolean
                                    subPath:
                                      description: Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
                                      type: string
                                    subPathExpr:
                                      description: Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
                                      type: string
                              workingDir:
                                description: Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
                                type: string
                        nodeName:
                          description: NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
                          type: string
                        nodeSelector:
                          description: 'NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node''s labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                          type: object
                          additionalProperties:
                            type: string
                        overhead:
                          description: 'Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/20190226-pod-overhead.md This field is alpha-level as of Kubernetes v1.16, and is only honored by servers that enable the PodOverhead feature.'
                          type: object
                          additionalProperties:
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            anyOf:
                              - type: integer
                              - type: string
                            x-kubernetes-int-or-string: true
                        preemptionPolicy:
                          description: PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is beta-level, gated by the NonPreemptingPriority feature-gate.
                          type: string
                        priority:
                          description: The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.
                          type: integer
                          format: int32
                        priorityClassName:
                          description: If specified, indicates the pod's priority. "system-node-critical" and "system-cluster-critical" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.
                          type: string
                        readinessGates:
                          description: 'If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md'
                          type: array
                          items:
                            description: PodReadinessGate contains the reference to a pod condition
                            type: object
                            required:
                              - conditionType
                            properties:
                              conditionType:
                                description: ConditionType refers to a condition in the pod's condition list with matching type.
                                type: string
                        restartPolicy:
                          description: 'Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy'
                          type: string
                        runtimeClassName:
                          description: 'RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is a beta feature as of Kubernetes v1.14.'
                          type: string
                        schedulerName:
                          description: If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
                          type: string
                        securityContext:
                          description: 'SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.'
                          type: object
                          properties:
                            fsGroup:
                              description: "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: \n 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- \n If unset, the Kubelet will not modify the ownership and permissions of any volume."
                              type: integer
                              format: int64
                            fsGroupChangePolicy:
                              description: 'fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified defaults to "Always".'
                              type: string
                            runAsGroup:
                              description: The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                              type: integer
                              format: int64
                            runAsNonRoot:
                              description: Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                              type: integer
                              format: int64
                            seLinuxOptions:
                              description: The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
                              type: object
                              properties:
                                level:
                                  description: Level is SELinux level label that applies to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies to the container.
                                  type: string
                            seccompProfile:
                              description: The seccomp options to use by the containers in this pod.
                              type: object
                              required:
                                - type
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied."
                                  type: string
                            supplementalGroups:
                              description: A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
                              type: array
                              items:
                                type: integer
                                format: int64
                            sysctls:
                              description: Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
                              type: array
                              items:
                                description: Sysctl defines a kernel parameter to be set
                                type: object
                                required:
                                  - name
                                  - value
                                properties:
                                  name:
                                    description: Name of a property to set
                                    type: string
                                  value:
                                    description: Value of a property to set
                                    type: string
                            windowsOptions:
                              description: The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: object
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                  type: string
                                runAsUserName:
                                  description: The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                        serviceAccount:
                          description: 'DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.'
                          type: string
                        serviceAccountName:
                          description: 'ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                          type: string
                        setHostnameAsFQDN:
                          description: If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default). In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname). In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN. If a pod does not have FQDN, this has no effect. Default to false.
                          type: boolean
                        shareProcessNamespace:
                          description: 'Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.'
                          type: boolean
                        subdomain:
                          description: If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all.
                          type: string
                        terminationGracePeriodSeconds:
                          description: Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
                          type: integer
                          format: int64
                        tolerations:
                          description: If specified, the pod's tolerations.
                          type: array
                          items:
                            description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                            type: object
                            properties:
                              effect:
                                description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                type: string
                              operator:
                                description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                                type: string
                              tolerationSeconds:
                                description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                                type: integer
                                format: int64
                              value:
                                description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                                type: string
                        topologySpreadConstraints:
                          description: TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.
                          type: array
                          items:
                            description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                            type: object
                            required:
                              - maxSkew
                              - topologyKey
                              - whenUnsatisfiable
                            properties:
                              labelSelector:
                                description: LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
                                type: object
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    type: array
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      type: object
                                      required:
                                        - key
                                        - operator
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          type: array
                                          items:
                                            type: string
                                  matchLabels:
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                    additionalProperties:
                                      type: string
                              maxSkew:
                                description: 'MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It''s a required field. Default value is 1 and 0 is not allowed.'
                                type: integer
                                format: int32
                              topologyKey:
                                description: TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field.
                                type: string
                              whenUnsatisfiable:
                                description: 'WhenUnsatisfiable indicates how to deal with a pod if it doesn''t satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,   but giving higher precedence to topologies that would help reduce the   skew. A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assigment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won''t make it *more* imbalanced. It''s a required field.'
                                type: string
                          x-kubernetes-list-map-keys:
                            - topologyKey
                            - whenUnsatisfiable
                          x-kubernetes-list-type: map
                        volumes:
                          description: 'List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                          type: array
                          items:
                            description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                            type: object
                            required:
                              - name
                            properties:
                              awsElasticBlockStore:
                                description: 'AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: object
                                required:
                                  - volumeID
                                properties:
                                  fsType:
                                    description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine'
                                    type: string
                                  partition:
                                    description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).'
                                    type: integer
                                    format: int32
                                  readOnly:
                                    description: 'Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                    type: boolean
                                  volumeID:
                                    description: 'Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                    type: string
                              azureDisk:
                                description: AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                                type: object
                                required:
                                  - diskName
                                  - diskURI
                                properties:
                                  cachingMode:
                                    description: 'Host Caching mode: None, Read Only, Read Write.'
                                    type: string
                                  diskName:
                                    description: The Name of the data disk in the blob storage
                                    type: string
                                  diskURI:
                                    description: The URI the data disk in the blob storage
                                    type: string
                                  fsType:
                                    description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    type: string
                                  kind:
                                    description: 'Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                                    type: string
                                  readOnly:
                                    description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                    type: boolean
                              azureFile:
                                description: AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                                type: object
                                required:
                                  - secretName
                                  - shareName
                                properties:
                                  readOnly:
                                    description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                    type: boolean
                                  secretName:
                                    description: the name of secret that contains Azure Storage Account Name and Key
                                    type: string
                                  shareName:
                                    description: Share Name
                                    type: string
                              cephfs:
                                description: CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                                type: object
                                required:
                                  - monitors
                                properties:
                                  monitors:
                                    description: 'Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                    type: array
                                    items:
                                      type: string
                                  path:
                                    description: 'Optional: Used as the mounted root, rather than the full Ceph tree, default is /'
                                    type: string
                                  readOnly:
                                    description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                    type: boolean
                                  secretFile:
                                    description: 'Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                    type: string
                                  secretRef:
                                    description: 'Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                    type: object
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                  user:
                                    description: 'Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                    type: string
                              cinder:
                                description: 'Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: object
                                required:
                                  - volumeID
                                properties:
                                  fsType:
                                    description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                    type: string
                                  readOnly:
                                    description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                    type: boolean
                                  secretRef:
                                    description: 'Optional: points to a secret object containing parameters used to connect to OpenStack.'
                                    type: object
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                  volumeID:
                                    description: 'volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                    type: string
                              configMap:
                                description: ConfigMap represents a configMap that should populate this volume
                                type: object
                                properties:
                                  defaultMode:
                                    description: 'Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    type: integer
                                    format: int32
                                  items:
                                    description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                    type: array
                                    items:
                                      description: Maps a string key to a path within a volume.
                                      type: object
                                      required:
                                        - key
                                        - path
                                      properties:
                                        key:
                                          description: The key to project.
                                          type: string
                                        mode:
                                          description: 'Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          type: integer
                                          format: int32
                                        path:
                                          description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                          type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its keys must be defined
                                    type: boolean
                              csi:
                                description: CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
                                type: object
                                required:
                                  - driver
                                properties:
                                  driver:
                                    description: Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
                                    type: string
                                  fsType:
                                    description: Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
                                    type: string
                                  nodePublishSecretRef:
                                    description: NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
                                    type: object
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                  readOnly:
                                    description: Specifies a read-only configuration for the volume. Defaults to false (read/write).
                                    type: boolean
                                  volumeAttributes:
                                    description: VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
                                    type: object
                                    additionalProperties:
                                      type: string
                              downwardAPI:
                                description: DownwardAPI represents downward API about the pod that should populate this volume
                                type: object
                                properties:
                                  defaultMode:
                                    description: 'Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    type: integer
                                    format: int32
                                  items:
                                    description: Items is a list of downward API volume file
                                    type: array
                                    items:
                                      description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                      type: object
                                      required:
                                        - path
                                      properties:
                                        fieldRef:
                                          description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                          type: object
                                          required:
                                            - fieldPath
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select in the specified API version.
                                              type: string
                                        mode:
                                          description: 'Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          type: integer
                                          format: int32
                                        path:
                                          description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                          type: string
                                        resourceFieldRef:
                                          description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                          type: object
                                          required:
                                            - resource
                                          properties:
                                            containerName:
                                              description: 'Container name: required for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              description: Specifies the output format of the exposed resources, defaults to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to select'
                                              type: string
                              emptyDir:
                                description: 'EmptyDir represents a temporary directory that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                type: object
                                properties:
                                  medium:
                                    description: 'What type of storage medium should back this directory. The default is "" which means to use the node''s default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                    type: string
                                  sizeLimit:
                                    description: 'Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                              ephemeral:
                                description: "Ephemeral represents a volume that is handled by a cluster storage driver (Alpha feature). The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed. \n Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim). \n Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod. \n Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information. \n A pod can use both types of ephemeral volumes and persistent volumes at the same time."
                                type: object
                                properties:
                                  readOnly:
                                    description: Specifies a read-only configuration for the volume. Defaults to false (read/write).
                                    type: boolean
                                  volumeClaimTemplate:
                                    description: "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long). \n An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster. \n This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created. \n Required, must not be nil."
                                    type: object
                                    required:
                                      - spec
                                    properties:
                                      metadata:
                                        description: May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
                                        type: object
                                      spec:
                                        description: The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
                                        type: object
                                        properties:
                                          accessModes:
                                            description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                            type: array
                                            items:
                                              type: string
                                          dataSource:
                                            description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.'
                                            type: object
                                            required:
                                              - kind
                                              - name
                                            properties:
                                              apiGroup:
                                                description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                                                type: string
                                              kind:
                                                description: Kind is the type of resource being referenced
                                                type: string
                                              name:
                                                description: Name is the name of resource being referenced
                                                type: string
                                          resources:
                                            description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                            type: object
                                            properties:
                                              limits:
                                                description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                                type: object
                                                additionalProperties:
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  x-kubernetes-int-or-string: true
                                              requests:
                                                description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                                type: object
                                                additionalProperties:
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  x-kubernetes-int-or-string: true
                                          selector:
                                            description: A label query over volumes to consider for binding.
                                            type: object
                                            properties:
                                              matchExpressions:
                                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                type: array
                                                items:
                                                  description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                  type: object
                                                  required:
                                                    - key
                                                    - operator
                                                  properties:
                                                    key:
                                                      description: key is the label key that the selector applies to.
                                                      type: string
                                                    operator:
                                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                      type: string
                                                    values:
                                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                      type: array
                                                      items:
                                                        type: string
                                              matchLabels:
                                                description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                type: object
                                                additionalProperties:
                                                  type: string
                                          storageClassName:
                                            description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                            type: string
                                          volumeMode:
                                            description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                                            type: string
                                          volumeName:
                                            description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                                            type: string
                              fc:
                                description: FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                                type: object
                                properties:
                                  fsType:
                                    description: 'Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine'
                                    type: string
                                  lun:
                                    description: 'Optional: FC target lun number'
                                    type: integer
                                    format: int32
                                  readOnly:
                                    description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                                    type: boolean
                                  targetWWNs:
                                    description: 'Optional: FC target worldwide names (WWNs)'
                                    type: array
                                    items:
                                      type: string
                                  wwids:
                                    description: 'Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.'
                                    type: array
                                    items:
                                      type: string
                              flexVolume:
                                description: FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
                                type: object
                                required:
                                  - driver
                                properties:
                                  driver:
                                    description: Driver is the name of the driver to use for this volume.
                                    type: string
                                  fsType:
                                    description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                    type: string
                                  options:
                                    description: 'Optional: Extra command options if any.'
                                    type: object
                                    additionalProperties:
                                      type: string
                                  readOnly:
                                    description: 'Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                                    type: boolean
                                  secretRef:
                                    description: 'Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.'
                                    type: object
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                              flocker:
                                description: Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                                type: object
                                properties:
                                  datasetName:
                                    description: Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
                                    type: string
                                  datasetUUID:
                                    description: UUID of the dataset. This is unique identifier of a Flocker dataset
                                    type: string
                              gcePersistentDisk:
                                description: 'GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: object
                                required:
                                  - pdName
                                properties:
                                  fsType:
                                    description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine'
                                    type: string
                                  partition:
                                    description: 'The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                    type: integer
                                    format: int32
                                  pdName:
                                    description: 'Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                    type: string
                                  readOnly:
                                    description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                    type: boolean
                              gitRepo:
                                description: 'GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod''s container.'
                                type: object
                                required:
                                  - repository
                                properties:
                                  directory:
                                    description: Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
                                    type: string
                                  repository:
                                    description: Repository URL
                                    type: string
                                  revision:
                                    description: Commit hash for the specified revision.
                                    type: string
                              glusterfs:
                                description: 'Glusterfs represents a Glusterfs mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                type: object
                                required:
                                  - endpoints
                                  - path
                                properties:
                                  endpoints:
                                    description: 'EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                    type: string
                                  path:
                                    description: 'Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                    type: string
                                  readOnly:
                                    description: 'ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                    type: boolean
                              hostPath:
                                description: 'HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.'
                                type: object
                                required:
                                  - path
                                properties:
                                  path:
                                    description: 'Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                    type: string
                                  type:
                                    description: 'Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                    type: string
                              iscsi:
                                description: 'ISCSI represents an ISCSI Disk resource that is attached to a kubelet''s host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                type: object
                                required:
                                  - iqn
                                  - lun
                                  - targetPortal
                                properties:
                                  chapAuthDiscovery:
                                    description: whether support iSCSI Discovery CHAP authentication
                                    type: boolean
                                  chapAuthSession:
                                    description: whether support iSCSI Session CHAP authentication
                                    type: boolean
                                  fsType:
                                    description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine'
                                    type: string
                                  initiatorName:
                                    description: Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
                                    type: string
                                  iqn:
                                    description: Target iSCSI Qualified Name.
                                    type: string
                                  iscsiInterface:
                                    description: iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
                                    type: string
                                  lun:
                                    description: iSCSI Target Lun number.
                                    type: integer
                                    format: int32
                                  portals:
                                    description: iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                                    type: array
                                    items:
                                      type: string
                                  readOnly:
                                    description: ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
                                    type: boolean
                                  secretRef:
                                    description: CHAP Secret for iSCSI target and initiator authentication
                                    type: object
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                  targetPortal:
                                    description: iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
                                    type: string
                              name:
                                description: 'Volume''s name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              nfs:
                                description: 'NFS represents an NFS mount on the host that shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: object
                                required:
                                  - path
                                  - server
                                properties:
                                  path:
                                    description: 'Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                    type: string
                                  readOnly:
                                    description: 'ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                    type: boolean
                                  server:
                                    description: 'Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                    type: string
                              persistentVolumeClaim:
                                description: 'PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                type: object
                                required:
                                  - claimName
                                properties:
                                  claimName:
                                    description: 'ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                    type: string
                                  readOnly:
                                    description: Will force the ReadOnly setting in VolumeMounts. Default false.
                                    type: boolean
                              photonPersistentDisk:
                                description: PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                                type: object
                                required:
                                  - pdID
                                properties:
                                  fsType:
                                    description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    type: string
                                  pdID:
                                    description: ID that identifies Photon Controller persistent disk
                                    type: string
                              portworxVolume:
                                description: PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
                                type: object
                                required:
                                  - volumeID
                                properties:
                                  fsType:
                                    description: FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                    type: string
                                  readOnly:
                                    description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                    type: boolean
                                  volumeID:
                                    description: VolumeID uniquely identifies a Portworx volume
                                    type: string
                              projected:
                                description: Items for all in one resources secrets, configmaps, and downward API
                                type: object
                                required:
                                  - sources
                                properties:
                                  defaultMode:
                                    description: Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
                                    type: integer
                                    format: int32
                                  sources:
                                    description: list of volume projections
                                    type: array
                                    items:
                                      description: Projection that may be projected along with other supported volume types
                                      type: object
                                      properties:
                                        configMap:
                                          description: information about the configMap data to project
                                          type: object
                                          properties:
                                            items:
                                              description: If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                              type: array
                                              items:
                                                description: Maps a string key to a path within a volume.
                                                type: object
                                                required:
                                                  - key
                                                  - path
                                                properties:
                                                  key:
                                                    description: The key to project.
                                                    type: string
                                                  mode:
                                                    description: 'Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                    type: integer
                                                    format: int32
                                                  path:
                                                    description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                    type: string
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap or its keys must be defined
                                              type: boolean
                                        downwardAPI:
                                          description: information about the downwardAPI data to project
                                          type: object
                                          properties:
                                            items:
                                              description: Items is a list of DownwardAPIVolume file
                                              type: array
                                              items:
                                                description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                                type: object
                                                required:
                                                  - path
                                                properties:
                                                  fieldRef:
                                                    description: 'Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.'
                                                    type: object
                                                    required:
                                                      - fieldPath
                                                    properties:
                                                      apiVersion:
                                                        description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                        type: string
                                                      fieldPath:
                                                        description: Path of the field to select in the specified API version.
                                                        type: string
                                                  mode:
                                                    description: 'Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                    type: integer
                                                    format: int32
                                                  path:
                                                    description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                                    type: string
                                                  resourceFieldRef:
                                                    description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.'
                                                    type: object
                                                    required:
                                                      - resource
                                                    properties:
                                                      containerName:
                                                        description: 'Container name: required for volumes, optional for env vars'
                                                        type: string
                                                      divisor:
                                                        description: Specifies the output format of the exposed resources, defaults to "1"
                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                        anyOf:
                                                          - type: integer
                                                          - type: string
                                                        x-kubernetes-int-or-string: true
                                                      resource:
                                                        description: 'Required: resource to select'
                                                        type: string
                                        secret:
                                          description: information about the secret data to project
                                          type: object
                                          properties:
                                            items:
                                              description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                              type: array
                                              items:
                                                description: Maps a string key to a path within a volume.
                                                type: object
                                                required:
                                                  - key
                                                  - path
                                                properties:
                                                  key:
                                                    description: The key to project.
                                                    type: string
                                                  mode:
                                                    description: 'Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                                    type: integer
                                                    format: int32
                                                  path:
                                                    description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                                    type: string
                                            name:
                                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret or its key must be defined
                                              type: boolean
                                        serviceAccountToken:
                                          description: information about the serviceAccountToken data to project
                                          type: object
                                          required:
                                            - path
                                          properties:
                                            audience:
                                              description: Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
                                              type: string
                                            expirationSeconds:
                                              description: ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
                                              type: integer
                                              format: int64
                                            path:
                                              description: Path is the path relative to the mount point of the file to project the token into.
                                              type: string
                              quobyte:
                                description: Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                                type: object
                                required:
                                  - registry
                                  - volume
                                properties:
                                  group:
                                    description: Group to map volume access to Default is no group
                                    type: string
                                  readOnly:
                                    description: ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
                                    type: boolean
                                  registry:
                                    description: Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
                                    type: string
                                  tenant:
                                    description: Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                    type: string
                                  user:
                                    description: User to map volume access to Defaults to serivceaccount user
                                    type: string
                                  volume:
                                    description: Volume is a string that references an already created Quobyte volume by name.
                                    type: string
                              rbd:
                                description: 'RBD represents a Rados Block Device mount on the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md'
                                type: object
                                required:
                                  - image
                                  - monitors
                                properties:
                                  fsType:
                                    description: 'Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine'
                                    type: string
                                  image:
                                    description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: string
                                  keyring:
                                    description: 'Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: string
                                  monitors:
                                    description: 'A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: array
                                    items:
                                      type: string
                                  pool:
                                    description: 'The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: string
                                  readOnly:
                                    description: 'ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: boolean
                                  secretRef:
                                    description: 'SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: object
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                  user:
                                    description: 'The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                    type: string
                              scaleIO:
                                description: ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                                type: object
                                required:
                                  - gateway
                                  - secretRef
                                  - system
                                properties:
                                  fsType:
                                    description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                                    type: string
                                  gateway:
                                    description: The host address of the ScaleIO API Gateway.
                                    type: string
                                  protectionDomain:
                                    description: The name of the ScaleIO Protection Domain for the configured storage.
                                    type: string
                                  readOnly:
                                    description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                    type: boolean
                                  secretRef:
                                    description: SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
                                    type: object
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                  sslEnabled:
                                    description: Flag to enable/disable SSL communication with Gateway, default false
                                    type: boolean
                                  storageMode:
                                    description: Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
                                    type: string
                                  storagePool:
                                    description: The ScaleIO Storage Pool associated with the protection domain.
                                    type: string
                                  system:
                                    description: The name of the storage system as configured in ScaleIO.
                                    type: string
                                  volumeName:
                                    description: The name of a volume already created in the ScaleIO system that is associated with this volume source.
                                    type: string
                              secret:
                                description: 'Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                type: object
                                properties:
                                  defaultMode:
                                    description: 'Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                    type: integer
                                    format: int32
                                  items:
                                    description: If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
                                    type: array
                                    items:
                                      description: Maps a string key to a path within a volume.
                                      type: object
                                      required:
                                        - key
                                        - path
                                      properties:
                                        key:
                                          description: The key to project.
                                          type: string
                                        mode:
                                          description: 'Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.'
                                          type: integer
                                          format: int32
                                        path:
                                          description: The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
                                          type: string
                                  optional:
                                    description: Specify whether the Secret or its keys must be defined
                                    type: boolean
                                  secretName:
                                    description: 'Name of the secret in the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                    type: string
                              storageos:
                                description: StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                                type: object
                                properties:
                                  fsType:
                                    description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    type: string
                                  readOnly:
                                    description: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                    type: boolean
                                  secretRef:
                                    description: SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
                                    type: object
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                        type: string
                                  volumeName:
                                    description: VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
                                    type: string
                                  volumeNamespace:
                                    description: VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
                                    type: string
                              vsphereVolume:
                                description: VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                                type: object
                                required:
                                  - volumePath
                                properties:
                                  fsType:
                                    description: Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                    type: string
                                  storagePolicyID:
                                    description: Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                                    type: string
                                  storagePolicyName:
                                    description: Storage Policy Based Management (SPBM) profile name.
                                    type: string
                                  volumePath:
                                    description: Path that identifies vSphere volume vmdk
                                    type: string
                    updateRequests:
                      description: UpdateRequests is a unique identifier for an AppSpecTemplate. Updating sub-values will trigger a new value.
                      type: integer
            status:
              description: AppStatus is the current configuration and running state for an App.
              type: object
              required:
                - serviceBindingConditions
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                buildName:
                  description: BuildName is the name of the build that produced the image.
                  type: string
                completionTime:
                  description: CompletionTime contains the time the build completed.
                  type: string
                  format: date-time
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                duration:
                  description: Duration contains the duration of the build.
                  type: string
                image:
                  description: Image is the latest successfully built image.
                  type: string
                instances:
                  description: Instances are actual status of the instance counts.
                  type: object
                  required:
                    - labelSelector
                  properties:
                    autoscalingStatus:
                      description: AutoscalingStatus contains status for each autoscaling rule
                      type: array
                      items:
                        description: AutoscalingRuleStatus contains the current status of an autoscaling rule.
                        type: object
                        required:
                          - Current
                        properties:
                          Current:
                            description: "AutoscalingRuleMetricValueStatus stores the metric value status. \n TODO b/172377284: This closely resembles https://godoc.org/k8s.io/api/autoscaling/v2beta2#MetricValueStatus Once the v2betaX is promoted to v2, it should be replaced."
                            type: object
                            properties:
                              averageValue:
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                          ruleType:
                            description: RuleType is the name of the scaling rule (e.g., CPU).
                            type: string
                          target:
                            description: Target value for the metric. Unit of target depends on the rule type. For CPU, it will be a percentage represented by number in range (0, 100].
                            type: integer
                            format: int32
                    effectiveMax:
                      description: DeprecatedEffectiveMax contains the effective maximum number of instances passed as an annotation.
                      type: string
                    effectiveMin:
                      description: DeprecatedEffectiveMin contains the effective minimum number of instances passed as an annotation value.
                      type: string
                    labelSelector:
                      description: LabelSelector for pods. It must match the pod template's labels.
                      type: string
                    replicas:
                      description: Replicas contains the number of App instances.
                      type: integer
                      format: int32
                    representation:
                      description: Representation contains a human readable description of the instance status.
                      type: string
                latestBuild:
                  description: LatestCreatedBuildName contains the name of the build that was most recently created.
                  type: string
                latestReadyBuild:
                  description: LatestReadyBuildName contains the name of the build that was most recently built correctly.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                routeConditions:
                  description: RouteConditions are the conditions of the routes.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                routes:
                  description: Routes contains the statuses of the Routes attached to the instance.
                  type: array
                  items:
                    description: AppRouteStatus contains the status information about a Route.
                    type: object
                    required:
                      - destination
                      - source
                    properties:
                      destination:
                        description: Destination is the traffic sink.
                        type: object
                        required:
                          - port
                          - serviceName
                          - weight
                        properties:
                          port:
                            description: Port is the port to send traffic to.
                            type: integer
                            format: int32
                          serviceName:
                            description: Service is the name of the service to send traffic to. With Apps, the service name is the App name.
                            type: string
                          weight:
                            description: Weight is the proportion of traffic to send to this binding.
                            type: integer
                            format: int32
                      source:
                        description: Source is the route to listen on.
                        type: object
                        properties:
                          domain:
                            description: Domain is the domain of the route (e.g, in hostname.example.com it would be example.com).
                            type: string
                          hostname:
                            description: Hostname is the hostname or subdomain of the route (e.g, in hostname.example.com it would be hostname).
                            type: string
                          path:
                            description: Path is the URL path of the route.
                            type: string
                      status:
                        description: Status contains the status of this binding.
                        type: string
                      url:
                        description: URL is the URL for the route
                        type: string
                      virtualservice:
                        description: VirtualService is the VirtualService that is created with the Route.
                        type: object
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                serviceAccountName:
                  description: ServiceAccountName is the service account used by the app.
                  type: string
                serviceBindingConditions:
                  description: ServiceBindingConditions are the conditions of the service bindings.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                serviceBindings:
                  description: ServiceBindings are the bindings currently attached to the App.
                  type: array
                  items:
                    type: string
                startTime:
                  description: StartTime contains the time the build started.
                  type: string
                  format: date-time
                tasks:
                  description: Tasks are status of Tasks run on the App.
                  type: object
                  required:
                    - updateRequests
                  properties:
                    updateRequests:
                      description: UpdateRequests contains the number of run-task requests on the App.
                      type: integer
                urls:
                  description: "URLs is an aggregated list of URLs from Routes. This is a vanity field that is necessary due to: https://github.com/kubernetes/kubernetes/issues/67268 \n The values found here are also found in .status.routes[*].url \n NOTE: All Route URLs will be included. This includes non-ready ones."
                  type: array
                  items:
                    type: string
                volumes:
                  description: Volumes are the conditions of the volumes.
                  type: array
                  items:
                    description: AppVolumeStatus contains the status of mounted volume.
                    type: object
                    required:
                      - claim
                      - mountPath
                      - name
                    properties:
                      GID:
                        description: GID if specified will change the group of the mounted directory to GID.
                        type: string
                        nullable: true
                      UID:
                        description: UID if specified will change the owner of the mounted directory to UID.
                        type: string
                        nullable: true
                      claim:
                        type: string
                      mountPath:
                        type: string
                      name:
                        type: string
                      readonly:
                        type: boolean
      additionalPrinterColumns:
        - name: Instances
          type: string
          jsonPath: .status.instances.representation
        - name: Memory
          type: string
          jsonPath: .spec.template.spec.containers[?(@.name=="user-container")].resources.requests.memory
        - name: Disk
          type: string
          jsonPath: .spec.template.spec.containers[?(@.name=="user-container")].resources.requests.ephemeral-storage
        - name: CPU
          type: string
          jsonPath: .spec.template.spec.containers[?(@.name=="user-container")].resources.requests.cpu
        - name: URLs
          type: string
          jsonPath: ".status.urls"
        - name: Cluster URL
          type: string
          jsonPath: .status.address.url
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: builds.kf.dev
spec:
  group: kf.dev
  names:
    kind: Build
    plural: builds
    singular: build
    categories:
      - all
      - kf
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: Build represents the source code and build configuration for an App.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BuildSpec defines the source code for an App.
              type: object
              properties:
                apiVersion:
                  description: API version of the referent
                  type: string
                env:
                  description: Env represents the environment variables to apply when building the App.
                  type: array
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        type: object
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                            type: object
                            required:
                              - fieldPath
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                            type: object
                            required:
                              - resource
                            properties:
                              containerName:
                                description: 'Container name: required for volumes, optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            type: object
                            required:
                              - key
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                kind:
                  description: Kind indicates the kind of the task, namespaced or cluster scoped.
                  type: string
                name:
                  description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                  type: string
                nodeSelector:
                  description: NodeSelector represents the selectors to apply when building and deploying the App.
                  type: object
                  additionalProperties:
                    type: string
                params:
                  description: Params is the map of keys and values used for the custom task
                  type: array
                  items:
                    description: BuildParam holds custom parameters for the build being run. Unlike Tekton Params, Kf only supports string values, but the type is otherwise over-the-wire compatible.
                    type: object
                    required:
                      - name
                      - value
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                sourcePackage:
                  description: SourcePackage references the SourcePackage for the source code of the App. If left empty, the SOURCE_IMAGE environment variable will not be added to the resulting TaskRun.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
            status:
              description: BuildStatus is the current configuration and running state for an App's Build.
              type: object
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                buildName:
                  description: BuildName is the name of the build that produced the image.
                  type: string
                completionTime:
                  description: CompletionTime contains the time the build completed.
                  type: string
                  format: date-time
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                duration:
                  description: Duration contains the duration of the build.
                  type: string
                image:
                  description: Image is the latest successfully built image.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                startTime:
                  description: StartTime contains the time the build started.
                  type: string
                  format: date-time
      additionalPrinterColumns:
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Task
          type: string
          jsonPath: .spec.name
        - name: Duration
          type: string
          jsonPath: .status.duration
        - name: Succeeded
          type: string
          jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Succeeded')].reason"
        - name: Image
          type: string
          jsonPath: .status.image

---
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: clusterservicebrokers.kf.dev
spec:
  group: kf.dev
  names:
    kind: ClusterServiceBroker
    plural: clusterservicebrokers
    singular: clusterservicebroker
    categories:
      - all
      - kf
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: ClusterServiceBroker represents an Open Service Broker (OSB) compatible service broker available at the cluster level.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterServiceBrokerSpec contains the user supplied specification for the broker.
              type: object
              properties:
                credentials:
                  description: Credentials contains a reference to a secret containing credentials for the service.
                  type: object
                  required:
                    - name
                    - namespace
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                updateRequests:
                  description: UpdateRequests is a unique identifier, updating will trigger a refresh.
                  type: integer
                volume:
                  description: VolumeBrokerSpec indicates this service broker is a VolumeBroker.
                  type: object
                  properties:
                    offering:
                      description: VolumeOfferings contains ServiceOfferings supported by this broker.
                      type: array
                      items:
                        description: ServiceOffering has just enough info to display the offering in the marketplace command and provision it.
                        type: object
                        required:
                          - description
                          - displayName
                          - uid
                        properties:
                          description:
                            description: Description is a human readable description of the offering.
                            type: string
                          displayName:
                            description: DisplayName is the human readable name of the offering, the field is unstable across releases.
                            type: string
                          plans:
                            description: Plans contains a list of tiers that can be provisioned. For example, databases might come in different sizes.
                            type: array
                            items:
                              description: ServicePlan has just enough info to display the offering in the marketplace command and provision it.
                              type: object
                              required:
                                - description
                                - displayName
                                - free
                                - uid
                              properties:
                                description:
                                  description: Description is a human readable description of the plan.
                                  type: string
                                displayName:
                                  description: DisplayName is the human readable name of the plan. This value is unstable across releases.
                                  type: string
                                free:
                                  description: Free indicates that the plan has no cost to the end-user. https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-plan-object
                                  type: boolean
                                uid:
                                  description: UID is the unique ID of the plan (within the service). The value is stable across broker releases. It's recommended, but not required that this value be a UUID.
                                  type: string
                          tags:
                            description: 'Tags contains opaque labels to help filter marketplace, examples include: gcp, sql, myssql.'
                            type: array
                            items:
                              type: string
                            nullable: true
                          uid:
                            description: UID is a unique ID of the offering within the broker, this value is stable across broker releases and is used to track when names change. It's recommended, but not required that this value be a UUID.
                            type: string
            status:
              description: CommonServiceBrokerStatus contains the status of the broker.
              type: object
              required:
                - updateRequests
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                services:
                  description: Services contains the list of services offered by the broker.
                  type: array
                  items:
                    description: ServiceOffering has just enough info to display the offering in the marketplace command and provision it.
                    type: object
                    required:
                      - description
                      - displayName
                      - uid
                    properties:
                      description:
                        description: Description is a human readable description of the offering.
                        type: string
                      displayName:
                        description: DisplayName is the human readable name of the offering, the field is unstable across releases.
                        type: string
                      plans:
                        description: Plans contains a list of tiers that can be provisioned. For example, databases might come in different sizes.
                        type: array
                        items:
                          description: ServicePlan has just enough info to display the offering in the marketplace command and provision it.
                          type: object
                          required:
                            - description
                            - displayName
                            - free
                            - uid
                          properties:
                            description:
                              description: Description is a human readable description of the plan.
                              type: string
                            displayName:
                              description: DisplayName is the human readable name of the plan. This value is unstable across releases.
                              type: string
                            free:
                              description: Free indicates that the plan has no cost to the end-user. https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-plan-object
                              type: boolean
                            uid:
                              description: UID is the unique ID of the plan (within the service). The value is stable across broker releases. It's recommended, but not required that this value be a UUID.
                              type: string
                      tags:
                        description: 'Tags contains opaque labels to help filter marketplace, examples include: gcp, sql, myssql.'
                        type: array
                        items:
                          type: string
                        nullable: true
                      uid:
                        description: UID is a unique ID of the offering within the broker, this value is stable across broker releases and is used to track when names change. It's recommended, but not required that this value be a UUID.
                        type: string
                updateRequests:
                  description: UpdateRequests is the last processed UpdateRequests value.
                  type: integer
      additionalPrinterColumns:
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: routes.kf.dev
spec:
  group: kf.dev
  names:
    kind: Route
    plural: routes
    singular: route
    categories:
      - all
      - kf
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: Route is a mapping between a Hostname/Domain/Path combination and Apps that want to receive traffic from it.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: RouteSpec contains the specification for a Route.
              type: object
              properties:
                domain:
                  description: Domain is the domain of the route (e.g, in hostname.example.com it would be example.com).
                  type: string
                hostname:
                  description: Hostname is the hostname or subdomain of the route (e.g, in hostname.example.com it would be hostname).
                  type: string
                path:
                  description: Path is the URL path of the route.
                  type: string
            status:
              description: RouteStatus is the current configuration for a Route.
              type: object
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                appBindingDisplayNames:
                  description: AppBindingDisplayNames is the list of DisplayNames in the Bindings field that belong to Apps.
                  type: array
                  items:
                    type: string
                bindings:
                  description: Bindings is the list of bindings the RouteSpecFields matches.
                  type: array
                  items:
                    description: RouteDestination represents enough information to route traffic from a source to a sink.
                    type: object
                    required:
                      - port
                      - serviceName
                      - weight
                    properties:
                      port:
                        description: Port is the port to send traffic to.
                        type: integer
                        format: int32
                      serviceName:
                        description: Service is the name of the service to send traffic to. With Apps, the service name is the App name.
                        type: string
                      weight:
                        description: Weight is the proportion of traffic to send to this binding.
                        type: integer
                        format: int32
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                domain:
                  description: Domain is the domain of the route (e.g, in hostname.example.com it would be example.com).
                  type: string
                hostname:
                  description: Hostname is the hostname or subdomain of the route (e.g, in hostname.example.com it would be hostname).
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                path:
                  description: Path is the URL path of the route.
                  type: string
                routeService:
                  description: RouteService is the Route Service instance bound to the route, if one exists.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                virtualservice:
                  description: VirtualService is the VirtualService that is created with the Route.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
      additionalPrinterColumns:
        - name: Host
          type: string
          jsonPath: .spec.hostname
        - name: Domain
          type: string
          jsonPath: .spec.domain
        - name: Path
          type: string
          jsonPath: .spec.path
        - name: Apps
          type: string
          jsonPath: .status.appBindingDisplayNames
        - name: RouteService
          type: string
          jsonPath: .status.routeService.name
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: servicebrokers.kf.dev
spec:
  group: kf.dev
  names:
    kind: ServiceBroker
    plural: servicebrokers
    singular: servicebroker
    categories:
      - all
      - kf
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: ServiceBroker represents an Open Service Broker (OSB) compatible service broker.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceBrokerSpec contains the user supplied specification for the broker.
              type: object
              properties:
                credentials:
                  description: Credentials contains a reference to a secret containing credentials for the service.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                updateRequests:
                  description: UpdateRequests is a unique identifier, updating will trigger a refresh.
                  type: integer
                volume:
                  description: VolumeBrokerSpec indicates this service broker is a VolumeBroker.
                  type: object
                  properties:
                    offering:
                      description: VolumeOfferings contains ServiceOfferings supported by this broker.
                      type: array
                      items:
                        description: ServiceOffering has just enough info to display the offering in the marketplace command and provision it.
                        type: object
                        required:
                          - description
                          - displayName
                          - uid
                        properties:
                          description:
                            description: Description is a human readable description of the offering.
                            type: string
                          displayName:
                            description: DisplayName is the human readable name of the offering, the field is unstable across releases.
                            type: string
                          plans:
                            description: Plans contains a list of tiers that can be provisioned. For example, databases might come in different sizes.
                            type: array
                            items:
                              description: ServicePlan has just enough info to display the offering in the marketplace command and provision it.
                              type: object
                              required:
                                - description
                                - displayName
                                - free
                                - uid
                              properties:
                                description:
                                  description: Description is a human readable description of the plan.
                                  type: string
                                displayName:
                                  description: DisplayName is the human readable name of the plan. This value is unstable across releases.
                                  type: string
                                free:
                                  description: Free indicates that the plan has no cost to the end-user. https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-plan-object
                                  type: boolean
                                uid:
                                  description: UID is the unique ID of the plan (within the service). The value is stable across broker releases. It's recommended, but not required that this value be a UUID.
                                  type: string
                          tags:
                            description: 'Tags contains opaque labels to help filter marketplace, examples include: gcp, sql, myssql.'
                            type: array
                            items:
                              type: string
                            nullable: true
                          uid:
                            description: UID is a unique ID of the offering within the broker, this value is stable across broker releases and is used to track when names change. It's recommended, but not required that this value be a UUID.
                            type: string
            status:
              description: CommonServiceBrokerStatus contains the status of the broker.
              type: object
              required:
                - updateRequests
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                services:
                  description: Services contains the list of services offered by the broker.
                  type: array
                  items:
                    description: ServiceOffering has just enough info to display the offering in the marketplace command and provision it.
                    type: object
                    required:
                      - description
                      - displayName
                      - uid
                    properties:
                      description:
                        description: Description is a human readable description of the offering.
                        type: string
                      displayName:
                        description: DisplayName is the human readable name of the offering, the field is unstable across releases.
                        type: string
                      plans:
                        description: Plans contains a list of tiers that can be provisioned. For example, databases might come in different sizes.
                        type: array
                        items:
                          description: ServicePlan has just enough info to display the offering in the marketplace command and provision it.
                          type: object
                          required:
                            - description
                            - displayName
                            - free
                            - uid
                          properties:
                            description:
                              description: Description is a human readable description of the plan.
                              type: string
                            displayName:
                              description: DisplayName is the human readable name of the plan. This value is unstable across releases.
                              type: string
                            free:
                              description: Free indicates that the plan has no cost to the end-user. https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-plan-object
                              type: boolean
                            uid:
                              description: UID is the unique ID of the plan (within the service). The value is stable across broker releases. It's recommended, but not required that this value be a UUID.
                              type: string
                      tags:
                        description: 'Tags contains opaque labels to help filter marketplace, examples include: gcp, sql, myssql.'
                        type: array
                        items:
                          type: string
                        nullable: true
                      uid:
                        description: UID is a unique ID of the offering within the broker, this value is stable across broker releases and is used to track when names change. It's recommended, but not required that this value be a UUID.
                        type: string
                updateRequests:
                  description: UpdateRequests is the last processed UpdateRequests value.
                  type: integer
      additionalPrinterColumns:
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: serviceinstances.kf.dev
spec:
  group: kf.dev
  names:
    kind: ServiceInstance
    plural: serviceinstances
    singular: serviceinstance
    categories:
      - all
      - kf
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: ServiceInstance is a representation for any type of service instance (user-provided or created using a service broker).
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceInstanceSpec contains the specification for a binding.
              type: object
              required:
                - tags
              properties:
                brokered:
                  description: Brokered is a service instance created using a service broker via KSC.
                  type: object
                  properties:
                    broker:
                      description: Broker is the name of the service broker for the service instance. Fill this in to explicitly specify a broker if a service class and plan could match to multiple brokers.
                      type: string
                    className:
                      description: ClassName is the name of the service class.
                      type: string
                    namespaced:
                      description: Namespaced is true if the service broker/class/plan is namespaced, and false they are available at the cluster level.
                      type: boolean
                    planName:
                      description: PlanName is the name of the service plan.
                      type: string
                deleteRequests:
                  description: DeleteRequests is a unique identifier, updating will trigger an additional delete retry.
                  type: integer
                osb:
                  description: OSB is a service instance created using Kf's built-in OSB support.
                  type: object
                  properties:
                    brokerName:
                      description: BrokerName is the name of the service broker for the service instance.
                      type: string
                    className:
                      description: ClassName contains the human-readable name of the class.
                      type: string
                    classUID:
                      description: ClassUID contains the UID of the class, used for provisioning purposes.
                      type: string
                    namespaced:
                      description: Namespaced is true if the service broker/class/plan is namespaced, and false they are available at the cluster level.
                      type: boolean
                    planName:
                      description: PlanName contains the human-readable name of the plan.
                      type: string
                    planUID:
                      description: PlanUID contains the UID of the plan, used for provisioning purposes.
                      type: string
                    progressDeadlineSeconds:
                      description: ProgressDeadlineSeconds contains a configurable timeout between state transition and reaching a stable state before provisioning or deprovisioning times out.
                      type: integer
                      format: int64
                parametersFrom:
                  description: ParametersFrom contains a reference to a secret containing parameters for the service.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                tags:
                  description: Tags are optional tags provided by the user. They are included in VCAP_SERVICES for a service. Brokered services have tags associated with the CommonServiceClassSpec for that service. The tags set in this field will override all other tags. The JSON encoding of tags in VCAP_SERVICES in Cloud Foundry is [] rather than null, which is why the Tags field is not omitempty.
                  type: array
                  items:
                    type: string
                userProvided:
                  description: One and only one of the following should be specified. UPS is a user-provided service instance.
                  type: object
                  properties:
                    mockClassName:
                      description: MockClassName mocks the name of a different service class. This allows overriding the name as it shows up in VCAP_SERVICES to something other than the default "user-provided".
                      type: string
                    mockPlanName:
                      description: MockPlanName mocks the name of a different plan. This allows overriding the name as it shows up in VCAP_SERVICES to something other than the default blank string.
                      type: string
                    routeServiceURL:
                      description: RouteServiceURL is an alias for the net/url parsing of the service URL. It is not empty if the service instance is a route service.
                      type: object
                      properties:
                        ForceQuery:
                          type: boolean
                        Fragment:
                          type: string
                        Host:
                          type: string
                        Opaque:
                          type: string
                        Path:
                          type: string
                        RawFragment:
                          type: string
                        RawPath:
                          type: string
                        RawQuery:
                          type: string
                        Scheme:
                          type: string
                volume:
                  description: Volume is a volume service instance created using volume broker.
                  type: object
                  properties:
                    brokerName:
                      description: BrokerName is the name of the service broker for the service instance.
                      type: string
                    className:
                      description: ClassName contains the human-readable name of the class.
                      type: string
                    classUID:
                      description: ClassUID contains the UID of the class, used for provisioning purposes.
                      type: string
                    namespaced:
                      description: Namespaced is true if the service broker/class/plan is namespaced, and false they are available at the cluster level.
                      type: boolean
                    planName:
                      description: PlanName contains the human-readable name of the plan.
                      type: string
                    planUID:
                      description: PlanUID contains the UID of the plan, used for provisioning purposes.
                      type: string
                    progressDeadlineSeconds:
                      description: ProgressDeadlineSeconds contains a configurable timeout between state transition and reaching a stable state before provisioning or deprovisioning times out.
                      type: integer
                      format: int64
            status:
              description: ServiceInstanceStatus represents information about the status of a ServiceInstance.
              type: object
              required:
                - tags
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                className:
                  description: ClassName contains the human-readable name of the class
                  type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                deleteRequests:
                  description: DeleteRequests is a unique identifier, updating will trigger an additional delete retry.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                osbStatus:
                  description: OSBStatus contains information about the lifecycle of the OSB backed service.
                  type: object
                  properties:
                    deprovisionFailed:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    deprovisioned:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    deprovisioning:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    provisionFailed:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    provisioned:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    provisioning:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                planName:
                  description: PlanName contains the human-readable name of the plan
                  type: string
                routeServiceURL:
                  description: RouteServiceURL is an alias for the net/url parsing of the service URL.
                  type: object
                  properties:
                    ForceQuery:
                      type: boolean
                    Fragment:
                      type: string
                    Host:
                      type: string
                    Opaque:
                      type: string
                    Path:
                      type: string
                    RawFragment:
                      type: string
                    RawPath:
                      type: string
                    RawQuery:
                      type: string
                    Scheme:
                      type: string
                secretName:
                  description: SecretName is the K8s secret name that stores the parameters for a service instance.
                  type: string
                serviceTypeDescription:
                  description: ServiceTypeDescription is a human-readable name for the type of service referenced by this instance.
                  type: string
                tags:
                  description: Tags contains a list of tags to apply to the service when injecting via VCAP_SERVICES. The JSON encoding of tags in VCAP_SERVICES in Cloud Foundry is [] rather than null, which is why the Tags field is not omitempty.
                  type: array
                  items:
                    type: string
                volumeStatus:
                  description: VolumeStatus contains information about the k8s Volume objects
                  type: object
                  properties:
                    PersistentVolumeClaimName:
                      description: PersistentVolumeClaimName is the name of the PersistentVolumeClaim created for this instance.
                      type: string
                    PersistentVolumeName:
                      description: PersistentVolumeName is the name of the PersistentVolume created for this instance.
                      type: string
      additionalPrinterColumns:
        - name: Type
          type: string
          jsonPath: .status.serviceTypeDescription
        - name: ClassName
          type: string
          jsonPath: .status.className
        - name: PlanName
          type: string
          jsonPath: .status.planName
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the License);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an AS IS BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: serviceinstancebindings.kf.dev
spec:
  group: kf.dev
  names:
    kind: ServiceInstanceBinding
    plural: serviceinstancebindings
    singular: serviceinstancebinding
    categories:
      - all
      - kf
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: ServiceInstanceBinding is an abstraction for a service binding between any type of ServiceInstance and an App.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ServiceInstanceBindingSpec contains the specification for a binding.
              type: object
              required:
                - instanceRef
              properties:
                app:
                  description: App is the Kf App that the service instance is bound to.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                bindingNameOverride:
                  description: BindingNameOverride is the custom binding name set by the user. If it is not set, the name of the service instance is used.
                  type: string
                instanceRef:
                  description: InstanceRef is the service instance that is bound to the App or Route.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                parametersFrom:
                  description: ParametersFrom contains a reference to a secret containing parameters for the service instance binding.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                progressDeadlineSeconds:
                  description: ProgressDeadlineSeconds contains a configurable timeout between state transition and reaching a stable state before binding or unbinding times out.
                  type: integer
                  format: int64
                unbindRequests:
                  description: UnbindRequests is a unique identifier, updating will trigger an additional unbind retry.
                  type: integer
                route:
                  description: Route is the Route that the service instance is bound to.
                  type: object
                  properties:
                    domain:
                      description: Domain is the domain of the route (e.g, in hostname.example.com it would be example.com).
                      type: string
                    hostname:
                      description: Hostname is the hostname or subdomain of the route (e.g, in hostname.example.com it would be hostname).
                      type: string
                    path:
                      description: Path is the URL path of the route.
                      type: string
            status:
              description: ServiceInstanceBindingStatus represents information about the status of a Binding.
              type: object
              required:
                - tags
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                bindingName:
                  description: BindingName is the custom binding name set by the user, or the name of the service instance if a custom name was not provided.
                  type: string
                className:
                  description: ClassName contains the human-readable name of the class
                  type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                credentialsSecretRef:
                  description: CredentialsSecretRef is the K8s secret name that stores the credentials for the service binding.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                osbStatus:
                  description: OSBStatus contains information about the lifecycle of the OSB backed service.
                  type: object
                  properties:
                    bindFailed:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    binding:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    bound:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    unbindFailed:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    unbinding:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                    unbound:
                      description: OSBState contains information about a specific state.
                      type: object
                      properties:
                        operationKey:
                          description: OperationKey, if specified, holds the long running operation key for a given state. OSB uses this arbitrary value to reference specific back-end tasks it's performing.
                          type: string
                planName:
                  description: PlanName contains the human-readable name of the plan
                  type: string
                routeServiceURL:
                  description: RouteServiceURL is an alias for the net/url parsing of the service URL.
                  type: object
                  properties:
                    ForceQuery:
                      type: boolean
                    Fragment:
                      type: string
                    Host:
                      type: string
                    Opaque:
                      type: string
                    Path:
                      type: string
                    RawFragment:
                      type: string
                    RawPath:
                      type: string
                    RawQuery:
                      type: string
                    Scheme:
                      type: string
                tags:
                  description: Tags contains a list of tags to apply to the service when injecting via VCAP_SERVICES. The JSON encoding of tags in VCAP_SERVICES in Cloud Foundry is [] rather than null, which is why the Tags field is not omitempty.
                  type: array
                  items:
                    type: string
                volumeStatus:
                  description: VolumeStatus contains information about the k8s Volume objects
                  type: object
                  required:
                    - mount
                  properties:
                    GID:
                      description: GID if specified will change the group of the mounted directory to GID.
                      type: string
                      nullable: true
                    UID:
                      description: UID if specified will change the owner of the mounted directory to UID.
                      type: string
                      nullable: true
                    claimName:
                      description: PersistentVolumeClaimName is the name of the binded PersistentVolumeClaim.
                      type: string
                    mount:
                      description: Mount is the path to mount the NFS share.
                      type: string
                    readonly:
                      description: ReadOnly indicates whether the mounted share is readonly.
                      type: boolean
                    volumeName:
                      description: PersistentVolumeName is the name of the binded PersistentVolume.
                      type: string
      additionalPrinterColumns:
        - name: App
          type: string
          jsonPath: .spec.app.name
        - name: Service
          type: string
          jsonPath: .spec.instanceRef.name
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=="Ready")].status

---
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: sourcepackages.kf.dev
spec:
  group: kf.dev
  names:
    kind: SourcePackage
    plural: sourcepackages
    singular: sourcepackage
    categories:
      - all
      - kf
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: SourcePackage is responsible for storing the metadata about the source code bits.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SourcePackageSpec is the desired configuration for a SourcePackage.
              type: object
              properties:
                checksum:
                  description: Checksum has the checksum information.
                  type: object
                  properties:
                    type:
                      description: 'Type is the type of checksum used. The allowed values are (more might be added in the future): * sha256'
                      type: string
                    value:
                      description: Value is the hex encoded checksum of the package bits.
                      type: string
                size:
                  description: Size has the number of bytes of the package.
                  type: integer
                  format: int64
            status:
              description: SourcePackageStatus is the current configuration and running state for a SourcePackage.
              type: object
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                checksum:
                  description: Checksum has the checksum information.
                  type: object
                  properties:
                    type:
                      description: 'Type is the type of checksum used. The allowed values are (more might be added in the future): * sha256'
                      type: string
                    value:
                      description: Value is the hex encoded checksum of the package bits.
                      type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                image:
                  description: Image is the fully qualified image name that has stored the underlying data.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                size:
                  description: Size has the number of bytes of the package.
                  type: integer
                  format: int64
      additionalPrinterColumns:
        - name: Image
          type: string
          jsonPath: .status.image
        - name: Size
          type: integer
          jsonPath: .status.size
        - name: Succeeded
          type: string
          jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Succeeded')].reason"

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: spaces.kf.dev
spec:
  group: kf.dev
  names:
    kind: Space
    plural: spaces
    singular: space
    categories:
      - all
      - kf
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: Space is a high level structure that encompasses a namespace, permissions on it and configuration applied to it.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SpaceSpec contains the specification for a space.
              type: object
              properties:
                buildConfig:
                  description: BuildConfig contains config for the build pipelines.
                  type: object
                  properties:
                    containerRegistry:
                      description: ContainerRegistry holds the container registry that buildpack builds are stored in.
                      type: string
                    defaultToV3Stack:
                      description: DefaultToV3Stack tells kf whether it applications should default to using V3 stacks. If not supplied, the default value is taken from the config-defaults configmap.
                      type: boolean
                      nullable: true
                    env:
                      description: Env sets default environment variables on the builder.
                      type: array
                      items:
                        description: EnvVar represents an environment variable present in a Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value. Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                              fieldRef:
                                description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the specified API version.
                                    type: string
                              resourceFieldRef:
                                description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes, optional for env vars'
                                    type: string
                                  divisor:
                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                    serviceAccount:
                      description: ServiceAccount is the service account that will be propagated to all builds.
                      type: string
                networkConfig:
                  description: NetworkConfig contains settings for the space's networking environment.
                  type: object
                  properties:
                    appNetworkPolicy:
                      description: AppNetworkPolicy holds the default network policy for apps.
                      type: object
                      properties:
                        egress:
                          description: Egress holds the default network policy for outbound traffic.
                          type: string
                        ingress:
                          description: Ingress holds the default network policy for inbound traffic.
                          type: string
                    buildNetworkPolicy:
                      description: BuildNetworkPolicy holds the default network policy for builds.
                      type: object
                      properties:
                        egress:
                          description: Egress holds the default network policy for outbound traffic.
                          type: string
                        ingress:
                          description: Ingress holds the default network policy for inbound traffic.
                          type: string
                    domains:
                      description: Domains sets valid domains that can be used for routes in the space.
                      type: array
                      items:
                        description: SpaceDomain stores information about a domain available in a space.
                        type: object
                        required:
                          - domain
                        properties:
                          domain:
                            description: Domain is the valid domain that can be used in conjunction with a hostname and path for a route.
                            type: string
                          gatewayName:
                            description: GatewayName is the name of the Istio Gateway supported by the domain. Values can include a Namespace as a prefix. Only the kf Namespace is allowed e.g. kf/some-gateway. See https://istio.io/docs/reference/config/networking/gateway/
                            type: string
                runtimeConfig:
                  description: RuntimeConfig contains settings for the app runtime environment.
                  type: object
                  properties:
                    env:
                      description: Env sets default environment variables on kf applications for the whole space.
                      type: array
                      items:
                        description: EnvVar represents an environment variable present in a Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value. Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                              fieldRef:
                                description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the specified API version.
                                    type: string
                              resourceFieldRef:
                                description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes, optional for env vars'
                                    type: string
                                  divisor:
                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                    nodeSelector:
                      description: NodeSelector sets the NodeSelector in the podSpec to invoke Node Assignment https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes/
                      type: object
                      additionalProperties:
                        type: string
            status:
              description: SpaceStatus represents information about the status of a Space.
              type: object
              required:
                - ingressGateways
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                buildConfig:
                  description: BuildConfig contains the info necessary to configure builds.
                  type: object
                  required:
                    - defaultToV3Stack
                  properties:
                    buildpacksV2:
                      description: BuildpacksV2 contains a list of V2 (Cloud Foundry) compatible buildpacks that will be available by builders in the space.
                      type: array
                      items:
                        description: BuildpackV2Definition contains the a definition of a buildpack.
                        type: object
                        required:
                          - disabled
                          - name
                          - url
                        properties:
                          disabled:
                            description: Disabled is set when this buildpack shouldn't be used to build apps.
                            type: boolean
                          name:
                            description: Name is the human readable name of the buildpack.
                            type: string
                          url:
                            description: URL is the URL of the given buildpack.
                            type: string
                    containerRegistry:
                      description: ContainerRegistry holds the container registry that buildpack builds are stored in.
                      type: string
                    defaultToV3Stack:
                      description: DefaultToV3Stack tells kf whether it applications should default to using V3 stacks.
                      type: boolean
                    env:
                      description: Env contains additional build environment variables for the whole space.
                      type: array
                      items:
                        description: EnvVar represents an environment variable present in a Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value. Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                              fieldRef:
                                description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the specified API version.
                                    type: string
                              resourceFieldRef:
                                description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes, optional for env vars'
                                    type: string
                                  divisor:
                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                    serviceAccount:
                      description: ServiceAccount is the service account that will be propagated to all builds.
                      type: string
                    stacksV2:
                      description: StacksV2 contains a list of V2 (Cloud Foundry) compatible stacks that will be available by builders in the space.
                      type: array
                      items:
                        description: StackV2Definition contains the definition of a stack.
                        type: object
                        required:
                          - image
                          - name
                        properties:
                          description:
                            type: string
                          image:
                            type: string
                          name:
                            type: string
                          nodeSelector:
                            type: object
                            additionalProperties:
                              type: string
                    stacksV3:
                      description: StacksV3 contains a list of V3 (Cloud Native Buildpacks) compatible stacks that will be available by builders in the space.
                      type: array
                      items:
                        description: StackV3Definition contains the definition of a cloud native buildpack stack.
                        type: object
                        required:
                          - buildImage
                          - name
                          - runImage
                        properties:
                          buildImage:
                            type: string
                          description:
                            type: string
                          name:
                            type: string
                          nodeSelector:
                            type: object
                            additionalProperties:
                              type: string
                          runImage:
                            type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                ingressGateways:
                  description: IngressGateways contains the list of ingress gateways that could direct traffic into this Kf space.
                  type: array
                  items:
                    description: 'LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.'
                    type: object
                    properties:
                      hostname:
                        description: Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
                        type: string
                      ip:
                        description: IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
                        type: string
                networkConfig:
                  description: NetworkConfig contains the info necessary to configure application networking.
                  type: object
                  properties:
                    domains:
                      description: Domains sets valid domains that can be used for routes in the space.
                      type: array
                      items:
                        description: SpaceDomain stores information about a domain available in a space.
                        type: object
                        required:
                          - domain
                        properties:
                          domain:
                            description: Domain is the valid domain that can be used in conjunction with a hostname and path for a route.
                            type: string
                          gatewayName:
                            description: GatewayName is the name of the Istio Gateway supported by the domain. Values can include a Namespace as a prefix. Only the kf Namespace is allowed e.g. kf/some-gateway. See https://istio.io/docs/reference/config/networking/gateway/
                            type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                runtimeConfig:
                  description: RuntimeConfig contains the info necessary to configure the application runtime.
                  type: object
                  properties:
                    appCPUPerGBOfRAM:
                      description: AppCPUPerGBOfRAM sets the default amount of CPU to assign an app per GB of RAM.
                      anyOf:
                        - type: integer
                        - type: string
                      x-kubernetes-int-or-string: true
                    appCPUMin:
                      description: AppCPUMin sets the minimum amount of CPU to assign an app.
                      anyOf:
                        - type: integer
                        - type: string
                      x-kubernetes-int-or-string: true
                    env:
                      description: Env sets default environment variables on kf applications for the whole space.
                      type: array
                      items:
                        description: EnvVar represents an environment variable present in a Container.
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value. Cannot be used if value is not empty.
                            type: object
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                              fieldRef:
                                description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                type: object
                                required:
                                  - fieldPath
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the specified API version.
                                    type: string
                              resourceFieldRef:
                                description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                type: object
                                required:
                                  - resource
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes, optional for env vars'
                                    type: string
                                  divisor:
                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's namespace
                                type: object
                                required:
                                  - key
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
      additionalPrinterColumns:
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].status"
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: taskschedules.kf.dev
spec:
  group: kf.dev
  names:
    kind: TaskSchedule
    plural: taskschedules
    singular: taskschedule
    categories:
      - all
      - kf
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: TaskSchedule is a configuration to create Tasks on a cron schedule.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TaskScheduleSpec contains the specification of a TaskSchedule.
              type: object
              properties:
                concurrencyPolicy:
                  description: "ConcurrencyPolicy specifies how to treat concurrent executions of Tasks. Valid values are \n - \"Allow\" (default): allows CronJobs to run concurrently; - \"Forbid\": forbids concurrent runs, skipping next run if previous run \t\thasn't finished yet; - \"Replace\": cancels currently running job and replaces it with a new one."
                  type: string
                schedule:
                  description: Schedule is the interval to start Tasks in Cron format, see https://en.wikipedia.org/wiki/Cron.
                  type: string
                suspend:
                  description: Suspend tells the controller to suspend subsequent executions. It does not apply to already started executions.
                  type: boolean
                taskTemplate:
                  description: TaskTemplate specifies the Task that will be created when executing a TaskSchedule.
                  type: object
                  properties:
                    appRef:
                      description: AppRef is to reference the App the task is created on.
                      type: object
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                    command:
                      description: Command is the start command to be set for the Task.
                      type: string
                    cpu:
                      description: CPU is the number of cpu core to request for the Task, e.g. "1", "500m" or "0.5".
                      type: string
                    disk:
                      description: Disk is the number of ephermeral storage units to request for the Task, e.g. "1G", "2Gi".
                      type: string
                    displayName:
                      description: DisplayName of the Task, it is either user-provided or auto generated.
                      type: string
                    memory:
                      description: Memory is the number of memory units to request for the Task, e.g. "1G", "2Gi".
                      type: string
                    terminated:
                      description: Terminated determines if the Task should have been terminated or not.
                      type: boolean
            status:
              description: TaskScheduleStatus represents information about the status of a TaskSchedule.
              type: object
              properties:
                active:
                  description: Active is a list of currently running Tasks created via this TaskSchedule.
                  type: array
                  items:
                    description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                    type: object
                    properties:
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                        type: string
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                lastScheduleTime:
                  description: LastScheduleTime is the timestamp of when a Task was last scheduled.
                  type: string
                  format: date-time
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
      additionalPrinterColumns:
        - name: Schedule
          type: string
          jsonPath: .spec.schedule
        - name: Suspend
          type: boolean
          jsonPath: .spec.suspend
        - name: LastSchedule
          type: date
          jsonPath: .status.lastScheduleTime
        - name: ConcurrencyPolicy
          type: string
          jsonPath: .spec.concurrencyPolicy
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Ready
          type: string
          jsonPath: .status.conditions[?(@.type=="Ready")].status
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: tasks.kf.dev
spec:
  group: kf.dev
  names:
    kind: Task
    plural: tasks
    singular: task
    categories:
      - all
      - kf
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: Task is a representation for short-lived task.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: TaskSpec contains the specification of a Task.
              type: object
              properties:
                appRef:
                  description: AppRef is to reference the App the task is created on.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                command:
                  description: Command is the start command to be set for the Task.
                  type: string
                cpu:
                  description: CPU is the number of cpu core to request for the Task, e.g. "1", "500m" or "0.5".
                  type: string
                disk:
                  description: Disk is the number of ephermeral storage units to request for the Task, e.g. "1G", "2Gi".
                  type: string
                displayName:
                  description: DisplayName of the Task, it is either user-provided or auto generated.
                  type: string
                memory:
                  description: Memory is the number of memory units to request for the Task, e.g. "1G", "2Gi".
                  type: string
                terminated:
                  description: Terminated determines if the Task should have been terminated or not.
                  type: boolean
            status:
              description: TaskStatus represents information about the status of a Task.
              type: object
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                completionTime:
                  description: CompletionTime is the timestamp of when the Task completes.
                  type: string
                  format: date-time
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Conditions defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                        format: date-time
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                duration:
                  description: Duration is the time duration of how long did it take for the Task to transition from start to completion.
                  type: string
                id:
                  description: ID is a unique identifier of the Task within an App.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
                startTime:
                  description: StartTime is the timestamp of when the Task starts.
                  type: string
                  format: date-time
      additionalPrinterColumns:
        - name: ID
          type: integer
          jsonPath: .status.id
        - name: DisplayName
          type: string
          jsonPath: .spec.displayName
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: Duration
          type: string
          jsonPath: .status.duration
        - name: Succeeded
          type: string
          jsonPath: .status.conditions[?(@.type=="Succeeded")].status
        - name: Reason
          type: string
          jsonPath: ".status.conditions[?(@.type=='Succeeded')].reason"

---
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: subresource-apiserver
  namespace: kf
spec:
  ports:
    - name: https
      port: 443
      targetPort: 6443
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: subresource-apiserver

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
    app: controller
  name: controller
  namespace: kf
spec:
  ports:
    # Open a port for any metrics generated by the reconciliation controllers,
    # this is a feature of Knative's core controllers and kf can report on a
    # variety of things.
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: 9090
  selector:
    app: controller

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
    role: webhook
  name: webhook
  namespace: kf
spec:
  ports:
    - port: 443
      targetPort: 8443
  selector:
    role: webhook

---
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  name: webhook.kf.dev
  labels:
    kf.dev/release: v2.11.5
webhooks:
  - admissionReviewVersions: ["v1", "v1beta1"]
    clientConfig:
      service:
        name: webhook
        namespace: kf
    failurePolicy: Fail
    sideEffects: None
    name: webhook.kf.dev
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  name: validation.webhook.kf.dev
  labels:
    kf.dev/release: v2.11.5
webhooks:
  - admissionReviewVersions: ["v1", "v1beta1"]
    clientConfig:
      service:
        name: webhook
        namespace: kf
    failurePolicy: Fail
    sideEffects: None
    name: validation.webhook.kf.dev
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  name: config.webhook.kf.dev
  labels:
    kf.dev/release: v2.11.5
webhooks:
  - admissionReviewVersions: ["v1", "v1beta1"]
    clientConfig:
      service:
        name: webhook
        namespace: kf
    failurePolicy: Fail
    sideEffects: None
    name: config.webhook.kf.dev
    namespaceSelector:
      matchExpressions:
        - key: kf.dev/release
          operator: Exists
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    operator.knative.dev/mode: EnsureExists
  name: webhook-certs
  namespace: kf
  labels:
    kf.dev/release: v2.11.5
# The data is populated at install time.

---
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    app: subresource-apiserver
    kf.dev/release: v2.11.5
  name: subresource-apiserver
  namespace: kf
spec:
  replicas: 3
  selector:
    matchLabels:
      app: subresource-apiserver
  template:
    metadata:
      labels:
        app: subresource-apiserver
        kf.dev/release: v2.11.5
      name: subresource-apiserver
    spec:
      serviceAccountName: controller
      containers:
        - name: subresource-apiserver
          image: gcr.io/kf-releases/subresource-apiserver-2a8b01273f197db7af21f6b4616837a0@sha256:b0ba4cd96f4c379b1d170bc27dbd4e14762a2bfe2b2dbdfeba3efc6b450f390f
          args: ["--secure-port=6443", "--cert-dir=/etc/kf/certs"]
          ports:
            - containerPort: 6443
              name: https
            - containerPort: 8080
              name: http
          volumeMounts:
            - mountPath: /tmp
              name: temp-vol
            - name: certs
              mountPath: "/etc/kf/certs"
              readOnly: false
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
      volumes:
        - name: temp-vol
          emptyDir: {}
        - name: config-logging
          configMap:
            name: config-logging
        - name: certs
          secret:
            secretName: upload-api-server-secret
            items:
              - key: server-cert.pem
                path: apiserver.crt
              - key: server-key.pem
                path: apiserver.key

---
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  annotations:
    # APIService will be managed by Kf controller for now.
    operator.knative.dev/mode: EnsureExists
  name: v1alpha1.upload.kf.dev
spec:
  service:
    name: subresource-apiserver
    namespace: kf
  group: upload.kf.dev
  version: v1alpha1
  insecureSkipTLSVerify: false
  # caBundle gets populated by the apiservercerts controller.
  groupPriorityMinimum: 100
  versionPriority: 100
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    operator.knative.dev/mode: EnsureExists
  name: upload-api-server-secret
  namespace: kf
  labels:
    kf.dev/release: v2.11.5
# The data is populated at install time.

---
# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: kf.dev/v1alpha1
kind: ClusterServiceBroker
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: nfsvolumebroker
spec:
  volume:
    offering:
      - displayName: nfs
        uid: "629d4a0a-bb74-484d-aa85-a8e086a82fc1"
        description: "mount nfs shares"
        tags: []
        plans:
          - displayName: "existing"
            free: true
            uid: b3b1d330-d16f-4e43-b854-2f26954fdd9b
            description: "mount existing nfs server"

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: config-defaults
  namespace: kf
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # spaceContainerRegistry is the default container registry to assign to
    # spaces.
    spaceContainerRegistry: gcr.io/my-project

    # spaceClusterDomains contains an ordered list of default domains to be
    # injected into spaces. The value must be a valid JSON or YAML array.
    #
    # Each entry in the list must be an object with a `domain` property.
    # This property contains a string representation of the domain.
    #
    # It MAY contain the following two varaible substitutions:
    # - $(SPACE_NAME) - The name of the space
    # - $(CLUSTER_INGRESS_IP) - The ingress IP of the cluster
    #
    # It's recommended (but not required) that all domains contain the $(SPACE_NAME)
    # substitution to prevent apps in different spaces from conflicting.
    #
    # An optional second property 'gatewayName' can set which Istio Gateway
    # corresponding routes will assign to themselves. The 'gatewayName' field
    # is a string of the form 'kf/some-gateway', where `some-gateway' is a
    # Gateway resource in the 'kf' Namespace.
    #
    # If 'gatewayName' is not set, the default 'kf/external-gateway' is used.
    spaceClusterDomains: |
      - domain: $(SPACE_NAME).prod.example.com
      - domain: $(SPACE_NAME).kf.us-east1.prod.example.com
      - domain: $(SPACE_NAME).$(CLUSTER_INGRESS_IP).nip.io
      - domain: $(SPACE_NAME)-apps.internal
        gatewayName: kf/internal-gateway

    # buildpacksV2LifecycleImage is the image URL for the V2 buildpack
    # lifecycle binaries. It is expected to contain the `launcher` and
    # `builder` binaries AND to self extract those binaries into /workspace.
    buildpacksV2LifecycleImage: "ko://code.cloudfoundry.org/buildpackapplifecycle/installer"

    # buildDisableIstioSidecar when set to true, will preven the Istio sidecar
    # from being injected on Build pods.
    buildDisableIstioSidecar: "false"

    # buildPodResources sets the Build pod resources field.
    # NOTE: This is only applicable for built-in Tasks. For V2 builds, this
    # will be set on two steps and one for V3 and Dockerfiles. This implies
    # for a V2 build, the required Pod size will be the limit doubled.  For
    # example, if the memory limit is 1Gi, then the pod will require 2Gi.
    buildPodResources: |
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "128Mi"
        cpu: "500m"

    # spaceBuildpacksV2 contains an ordered list of default buildpacks to be
    # used for CF compatible builds. The value must be a valid JSON or YAML
    # string.
    #
    # Each entry in the list must be an object with `name` and `url` propreties
    # indicating the human readable name of the buildpack and the URL to
    # fetch it from at runtime. An additional `disabled` property can be used
    # to disable a single buildpack.
    spaceBuildpacksV2: |
      - name: name-of-buildpack
        url:  https://github.com/cloudfoundry/name-of-buildpack
        disabled: false

    # spaceStacksV2 contains list of default stacks to be used for CF compatible
    # builds. The value must be a valid JSON or YAML string.
    #
    # Each entry in the list must be an object with `name` and `image`
    # propreties indicating the human readable name of the stack and the docker
    # image that will be used by the apps/buildpacks that run on it.
    #
    # Use images tagged with SHAs to improve build caching.
    spaceStacksV2: |
      - name:  cflinuxfs3
        image: cloudfoundry/cflinuxfs3

    # spaceStacksV3 contains list of default stacks to be used for cloud native
    # buildpack builds. The value must be a valid JSON or YAML string.
    #
    # Additional stacks can be discovered using `pack suggest-stacks`
    #
    # Each entry in the list must be an object with the following properties:
    # - `name` - the name of the stack to be specified in the app manifest
    # - `description` - a description of the stack
    # - `buildImage` - the buildpack builder image
    # - `runImage` - the base image of the produced application
    # - `nodeSelector` - list of nodeSelectors
    spaceStacksV3: |
      - name: heroku-18
        description: The official Heroku stack based on Ubuntu 18.04
        buildImage: heroku/pack:18-build
        runImage: heroku/pack:18
        nodeSelector:
           kubernetes.io/os: windows

    # spaceDefaultToV3Stack will make spaces use v3 stacks by default if set to
    # true. This will only affect apps without a stack specified in the manifest.
    spaceDefaultToV3Stack: "true"

    # routeServiceProxyImage is the container image used in the PodSpec of the K8s Deployment
    # created by Kf for every Route Service instance. This deployment acts as a proxy for the route
    # service. It adds the `X-Cf-Forwarded-URL` header to each request before forwarding to the route service.
    routeServiceProxyImage: "ko://github.com/google/kf/v2/route-service-proxy-src"

    # featureFlags allow certain features to be toggled on or off.
    # Feature flag names that are not supported by Kf will be ignored.
    # disable_custom_builds - Prevents builds with a kind other than "built-in" from being submitted.
    featureFlags: |
      disable_custom_builds: false
      enable_dockerfile_builds: true
      enable_custom_buildpacks: true
      enable_custom_stacks: true
      enable_some_feature: true

    # Minimum amount of CPUs to give an app based on the amount of RAM it
    # requests. Expressed as a Kubernetes quantity.
    appCPUPerGBOfRAM: "100m"
    # Absolute minimum amount of CPU to give an app. Expressed as a Kubernetes quantity.
    appCPUMin: "100m"

    # The following images are used to execute builds. They SHOULD NOT be
    # modified except in rare circumstances.
    buildHelpersImage: "ko://github.com/google/kf/v2/cmd/build-helpers"
    buildKanikoExecutorImage: "gcr.io/kaniko-project/executor:latest"
    buildInfoImage: "kf-release-repository/build-info:kf-version"
    buildTokenDownloadImage: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    nopImage: "ko://github.com/google/kf/v2/cmd/nop"
  spaceClusterDomains: |
    - domain: $(SPACE_NAME).$(CLUSTER_INGRESS_IP).nip.io
    - domain: apps.internal
      gatewayName: kf/internal-gateway
  buildpacksV2LifecycleImage: "gcr.io/kf-releases/installer-d148684b3032e4386ff76c190d42c7d0@sha256:71c65074eb157b2fb88f10c9a86e165ba6bbd5443f832977d8dd5b34a7a74308"
  spaceBuildpacksV2: |
    - name: staticfile_buildpack
      url: https://github.com/cloudfoundry/staticfile-buildpack
    - name: java_buildpack
      url: https://github.com/cloudfoundry/java-buildpack
    - name: ruby_buildpack
      url: https://github.com/cloudfoundry/ruby-buildpack
    - name: dotnet_core_buildpack
      url: https://github.com/cloudfoundry/dotnet-core-buildpack
    - name: nodejs_buildpack
      url: https://github.com/cloudfoundry/nodejs-buildpack
    - name: go_buildpack
      url: https://github.com/cloudfoundry/go-buildpack
    - name: python_buildpack
      url: https://github.com/cloudfoundry/python-buildpack
    - name: php_buildpack
      url: https://github.com/cloudfoundry/php-buildpack
    - name: binary_buildpack
      url: https://github.com/cloudfoundry/binary-buildpack
    - name: nginx_buildpack
      url: https://github.com/cloudfoundry/nginx-buildpack
  spaceStacksV2: |
    - name: cflinuxfs3
      image: cloudfoundry/cflinuxfs3@sha256:5219e9e30000e43e5da17906581127b38fa6417f297f522e332a801e737928f5
  spaceStacksV3: |
    - name: kf-v2-to-v3-shim
      description: A V3 stack that wraps the V2 buildpacks.
      buildImage: gcr.io/kf-releases/v2-to-v3-builder:v2.11.5
      runImage: gcr.io/buildpacks/gcp/run:v1
    - name: google
      description: Google buildpacks (https://github.com/GoogleCloudPlatform/buildpacks)
      buildImage: gcr.io/buildpacks/builder:v1
      runImage: gcr.io/buildpacks/gcp/run:v1
    - name: org.cloudfoundry.stacks.cflinuxfs3
      description: A large Cloud Foundry stack based on Ubuntu 18.04
      buildImage: cloudfoundry/cnb:cflinuxfs3@sha256:f96b6e3528185368dd6af1d9657527437cefdaa5fa135338462f68f9c9db3022
      runImage: cloudfoundry/run:full-cnb@sha256:dbe17be507b1cc6ffae1e9edf02806fe0e28ffbbb89a6c7ef41f37b69156c3c2
  spaceDefaultToV3Stack: "false"
  routeServiceProxyImage: "gcr.io/kf-releases/route-service-proxy-c1f6176cf95d0f3fa2d57301546cd9ba@sha256:f9d9836d0dfdae7c371f4aac1adb8ebbb8669a13384c629ec4e4ea30bb524222"
  buildKanikoExecutorImage: "gcr.io/kaniko-project/executor:v1.0.0"
  buildInfoImage: "gcr.io/kf-releases/setup-buildpack-build-3d4a49ab2eaf0617c947c1ff112148c7@sha256:171ae8dc02376a41263fd33f518c64f603419a202649340e00df2618b77f8fb4"
  buildTokenDownloadImage: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
  buildHelpersImage: "gcr.io/kf-releases/build-helpers-474eb21b176ee72508443e3d3d30098a@sha256:15b8422289689ebc2970302e3486b2152388d034bb24acdb706d86f185813a86"
  nopImage: "gcr.io/kf-releases/nop-3f3113223c79b33eae2bb115e1e237c5@sha256:35630e1bdd44bc323cd21126a1224df8749b51c57ba6a91aac253bfd80e90152"
  buildDisableIstioSidecar: "false"
  buildPodResources: ""
  featureFlags: |
    disable_custom_builds: false
    enable_dockerfile_builds: true
    enable_route_services: false
    enable_custom_buildpacks: true
    enable_custom_stacks: true
    enable_appdevexperience_builds: false
  appCPUPerGBOfRAM: "100m"
  appCPUMin: "100m"

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    operator.knative.dev/mode: EnsureExists
  labels:
    kf.dev/release: v2.11.5
  name: config-logging
  namespace: kf
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # Common configuration for all Knative codebase
    zap-logger-config: |
      {
        "level": "info",
        "development": false,
        "outputPaths": ["stdout"],
        "errorOutputPaths": ["stderr"],
        "encoding": "json",
        "encoderConfig": {
          "timeKey": "ts",
          "levelKey": "level",
          "nameKey": "logger",
          "callerKey": "caller",
          "messageKey": "msg",
          "stacktraceKey": "stacktrace",
          "lineEnding": "",
          "levelEncoder": "",
          "timeEncoder": "iso8601",
          "durationEncoder": "",
          "callerEncoder": ""
        }
      }

    # Log level overrides
    # For all components except the autoscaler and queue proxy,
    # changes are be picked up immediately.
    # For autoscaler and queue proxy, changes require recreation of the pods.
    loglevel.controller: "info"
    loglevel.autoscaler: "info"
    loglevel.queueproxy: "info"
    loglevel.webhook: "info"
    loglevel.activator: "info"

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    operator.knative.dev/mode: EnsureExists
  labels:
    kf.dev/release: v2.11.5
  name: config-observability
  namespace: kf
data:
  # Send metrics for Kf controller operations.
  metrics.backend-destination: stackdriver
  metrics.request-metrics-backend-destination: stackdriver
  metrics.allow-stackdriver-custom-metrics: "true"
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # logging.enable-var-log-collection defaults to false.
    # The fluentd daemon set will be set up to collect /var/log if
    # this flag is true.
    logging.enable-var-log-collection: false

    # logging.revision-url-template provides a template to use for producing the
    # logging URL that is injected into the status of each Revision.
    # This value is what you might use the the Knative monitoring bundle, and provides
    # access to Kibana after setting up kubectl proxy.
    logging.revision-url-template: |
      http://localhost:8001/api/v1/namespaces/knative-monitoring/services/kibana-logging/proxy/app/kibana#/discover?_a=(query:(match:(kubernetes.labels.knative-dev%2FrevisionUID:(query:'${REVISION_UID}',type:phrase))))

    # If non-empty, this enables queue proxy writing request logs to stdout.
    # The value determines the shape of the request logs and it must be a valid go text/template.
    # It is important to keep this as a single line. Multiple lines are parsed as separate entities
    # by most collection agents and will split the request logs into multiple records.
    #
    # The following fields and functions are available to the template:
    #
    # Request: An http.Request (see https://golang.org/pkg/net/http/#Request)
    # representing an HTTP request received by the server.
    #
    # Response:
    # struct {
    #   Code    int       // HTTP status code (see https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)
    #   Size    int       // An int representing the size of the response.
    #   Latency float64   // A float64 representing the latency of the response in seconds.
    # }
    #
    # Revision:
    # struct {
    #   Name          string  // Knative revision name
    #   Namespace     string  // Knative revision namespace
    #   Service       string  // Knative service name
    #   Configuration string  // Knative configuration name
    #   PodName       string  // Name of the pod hosting the revision
    #   PodIP         string  // IP of the pod hosting the revision
    # }
    #
    logging.request-log-template: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl": "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}", "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent": "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}", "serverIp": "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}", "latency": "{{.Response.Latency}}s", "protocol": "{{.Request.Proto}}"}, "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using stackdriver will incur additional charges
    metrics.backend-destination: prometheus

    # metrics.request-metrics-backend-destination specifies the request metrics
    # destination. If non-empty, it enables queue proxy to send request metrics.
    # Currently supported values: prometheus, stackdriver.
    metrics.request-metrics-backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used if this field is not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
    # Stackdriver using "global" resource type and custom metric type if the
    # metrics are not supported by "knative_revision" resource type. Setting this
    # flag to "true" could cause extra Stackdriver charge.
    # If metrics.backend-destination is not Stackdriver, this is ignored.
    metrics.allow-stackdriver-custom-metrics: "false"

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  ##########################
  #                        #
  #   EXAMPLE CONFIG MAP   #
  #                        #
  ##########################
  # This ConfigMap serves only as an example. It is named with the "-example"
  # suffix so that we don't accidently stomp on ourselves with something like
  # `ko apply`.
  #
  # Enable Workload Identity (WI) by setting googleServiceAccount to a Google
  # Service Account. If left empty, then WI is disabled and a
  # 'build.imagePushSecrets' is required. More information about WI can be
  # found here:
  # https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
  #
  # If you are using GKE and want to manually setup a secret do the following:
  # kubectl -nkf create secret docker-registry knative-build-key \
  #   --docker-username=_json_key \
  #   --docker-server https://gcr.io \
  #   --docker-password="$(cat /path/to/key.json)"
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: config-secrets-example
  namespace: kf
data:
  wi.googleServiceAccount: "some-gsa"
  wi.googleProjectID: "" # Empty implies that the metadata server should be used
  build.imagePushSecrets: "knative-build-key"

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: controller
  namespace: kf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: controller
        kf.dev/release: v2.11.5
    spec:
      serviceAccountName: controller
      containers:
        - name: controller
          # This is the Go import path for the binary that is containerized
          # and substituted here.
          image: gcr.io/kf-releases/controller-07998f8b6ac07623f78ee015e042c586@sha256:b23a26da803d55b8bd0b1ad98d9c4ad503db18b17948bf83b0c7b2a2eb20e9d3
          args:
            # TODO(b/178107014): This flag will be deprecated at some point. We
            # should try to get our controllers to work with HA before that.
            - --disable-ha=true
          resources:
            requests:
              cpu: 256m
              memory: 256Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          # We use a livenessProbe instead of a readinessProbe because if the
          # health check fails, then it will restart the pod (instead of not
          # signaling it at all). This is necessary for Workload Identity.
          # Without the pod restarting, if WI wasn't working at the beginning of
          # the pod starting, it would never work.
          livenessProbe:
            httpGet:
              path: /
              port: 10000
            initialDelaySeconds: 3
            periodSeconds: 3
          ports:
            - name: metrics
              containerPort: 9090
          volumeMounts:
            - name: config-logging
              mountPath: /etc/config-logging
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: kf.dev
            - name: KUBERNETES_MIN_VERSION
              value: v1.21.0
      volumes:
        - name: config-logging
          configMap:
            name: config-logging

---
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  labels:
    kf.dev/release: v2.11.5
  name: webhook
  namespace: kf
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook
      role: webhook
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "false"
      labels:
        app: webhook
        role: webhook
        kf.dev/release: v2.11.5
    spec:
      serviceAccountName: controller
      containers:
        - name: webhook
          # This is the Go import path for the binary that is containerized
          # and substituted here.
          image: gcr.io/kf-releases/webhook-7c741c491cb8bd40c130a6f0e744c8f3@sha256:ed95086a06c7f95bcc1a1a6bb6dad6031596205de3ca852a6b9e0822dd073eb7
          resources:
            # Request 2x what we saw running e2e
            requests:
              cpu: 20m
              memory: 20Mi
            # Limit to 10x the request (20x the observed peak during e2e)
            limits:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: config-logging
              mountPath: /etc/config-logging
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: METRICS_DOMAIN
              value: kf.dev
            - name: KUBERNETES_MIN_VERSION
              value: v1.21.0
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: config-logging
          configMap:
            name: config-logging

---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    operator.knative.dev/mode: Reconcile
  name: config-secrets
  namespace: kf
data:
  wi.googleProjectID: ""
